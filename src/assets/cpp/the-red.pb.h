/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_THE_RED_PB_H_INCLUDED
#define PB_THE_RED_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _MessageID {
    MessageID_ACK = 0,
    MessageID_NACK = 1,
    MessageID_FIRST_CONTACT = 2,
    MessageID_FIRST_CONTACT_RESP = 3,
    MessageID_TUNER_ONOFF = 4,
    MessageID_TUNER_FREQUENCY = 5,
    MessageID_KNOB_CLICKED = 6,
    MessageID_KNOB_MATCHING_START = 7,
    MessageID_PRESET_SAVE_READY_REQUEST = 8,
    MessageID_PRESET_SAVE_READY_RESPONSE = 9,
    MessageID_EFFECT_EOD = 10,
    MessageID_BATTERY_LEVEL = 11,
    MessageID_CURRENT_KNOB_SELECTED = 12,
    MessageID_SELECT_GATE = 13,
    MessageID_SELECT_EFX = 14,
    MessageID_SELECT_AMP = 15,
    MessageID_SELECT_IR = 16,
    MessageID_SELECT_MOD = 17,
    MessageID_SELECT_DELAY = 18,
    MessageID_SELECT_REVERB = 19,
    MessageID_PARAM_GATE_NOISE_GATE = 20,
    MessageID_PARAM_GATE_LIMITER = 21,
    MessageID_PARAM_GATE_COMPRESSOR = 22,
    MessageID_PARAM_EFX_OVERDRIVE = 23,
    MessageID_PARAM_EFX_DISTORTION = 24,
    MessageID_PARAM_EFX_FUZZ = 25,
    MessageID_PARAM_EFX_BIT_CRUSHER = 26,
    MessageID_PARAM_AMP_FENDER = 27,
    MessageID_PARAM_AMP_MARSHALL = 28,
    MessageID_PARAM_AMP_VOX = 29,
    MessageID_PARAM_AMP_ACOUSTIC = 30,
    MessageID_PARAM_IR_FENDER = 31,
    MessageID_PARAM_IR_MARSHALL = 32,
    MessageID_PARAM_IR_VOX = 33,
    MessageID_PARAM_IR_ACOUSTIC = 34,
    MessageID_PARAM_MOD_FLANGE = 35,
    MessageID_PARAM_MOD_CHORUS = 36,
    MessageID_PARAM_MOD_TREMOLO = 37,
    MessageID_PARAM_MOD_PHASER = 38,
    MessageID_PARAM_MOD_VIBRATO = 39,
    MessageID_PARAM_DELAY_ECHO = 40,
    MessageID_PARAM_DELAY_DELAY = 41,
    MessageID_PARAM_REVERB_ROOM = 42,
    MessageID_PARAM_REVERB_HALL = 43,
    MessageID_PARAM_REVERB_PLATE = 44,
    MessageID_PARAM_REVERB_SPRING = 45
} MessageID;

typedef enum _CategoryIr {
    CategoryIr_IR_KLON = 0,
    CategoryIr_IR_DS = 1,
    CategoryIr_IR_RAT = 2,
    CategoryIr_IR_MORPHER = 3,
    CategoryIr_IR_OCD = 4,
    CategoryIr_IR_BMF = 5,
    CategoryIr_IR_ACOUSTIC = 6
} CategoryIr;

/* App -> Guitar */
typedef enum _DiagCode {
    DiagCode_POWER_ON_COUNT = 0,
    DiagCode_FIRST_PAIRING = 1,
    DiagCode_ERROR_CODE = 2
} DiagCode;

typedef enum _Nack_ERROR_CODE {
    Nack_ERROR_CODE_INVALID_MESSAGE_ID = 0,
    Nack_ERROR_CODE_INVALID_MESSAGE_DATA = 1,
    Nack_ERROR_CODE_TIMEOUT = 2
} Nack_ERROR_CODE;

typedef enum _SelectGate_CategoryGate {
    SelectGate_CategoryGate_NOISE_GATE = 0,
    SelectGate_CategoryGate_LIMITER = 1,
    SelectGate_CategoryGate_COMPRESSOR = 2
} SelectGate_CategoryGate;

typedef enum _SelectEfx_CategoryEfx {
    SelectEfx_CategoryEfx_OVERDRIVE = 0,
    SelectEfx_CategoryEfx_DISTORTION = 1,
    SelectEfx_CategoryEfx_FUZZ = 2,
    SelectEfx_CategoryEfx_BIT_CRUSHER = 3
} SelectEfx_CategoryEfx;

typedef enum _SelectAmp_CategoryAmp {
    SelectAmp_CategoryAmp_FENDER = 0,
    SelectAmp_CategoryAmp_MARSHALL = 1,
    SelectAmp_CategoryAmp_VOX = 2,
    SelectAmp_CategoryAmp_ACOUSTIC = 3
} SelectAmp_CategoryAmp;

typedef enum _SelectMod_CategoryMod {
    SelectMod_CategoryMod_FLANGE = 0,
    SelectMod_CategoryMod_CHORUS = 1,
    SelectMod_CategoryMod_TREMOLO = 2,
    SelectMod_CategoryMod_PHASER = 3,
    SelectMod_CategoryMod_VIBRATO = 4
} SelectMod_CategoryMod;

typedef enum _SelectDelay_CategoryDelay {
    SelectDelay_CategoryDelay_ECHO = 0,
    SelectDelay_CategoryDelay_DELAY = 1
} SelectDelay_CategoryDelay;

typedef enum _SelectReverb_CategoryReverb {
    SelectReverb_CategoryReverb_ROOM = 0,
    SelectReverb_CategoryReverb_HALL = 1,
    SelectReverb_CategoryReverb_PLATE = 2
} SelectReverb_CategoryReverb;

typedef enum _DiagRespErrCode_ErrorCode {
    DiagRespErrCode_ErrorCode_DIAG_ERR_UNKNOWN_DIAG_ID = 0,
    DiagRespErrCode_ErrorCode_DIAG_ERR_INVALID_DIAG_DATA = 1
} DiagRespErrCode_ErrorCode;

/* Struct definitions */
typedef struct _Ack {
    int32_t receivedMessageLength;
} Ack;

typedef struct _Nack {
    Nack_ERROR_CODE errorCode;
} Nack;

/* App -> Guitar */
typedef struct _ReqSetupInfo {
    char dummy_field;
} ReqSetupInfo;

typedef struct _FirstContact {
    int64_t currentTimeEpoch;
    pb_callback_t phoneMachineId;
    pb_callback_t appVersion;
} FirstContact;

typedef struct _FirstContactResp {
    pb_callback_t guitarName;
    pb_callback_t guitarModelName;
    pb_callback_t firmwareVersion;
} FirstContactResp;

typedef struct _ChangeGuitarName {
    pb_callback_t guitarName;
} ChangeGuitarName;

typedef struct _TunerOnOff {
    bool isOn;
} TunerOnOff;

typedef struct _TunerFrequency {
    float tunerFrequency;
} TunerFrequency;

typedef struct _KnobClicked {
    int32_t knobNumber;
} KnobClicked;

typedef struct _KnobMatchingStart {
    int32_t knobNumber;
} KnobMatchingStart;

typedef struct _EffectEod {
    bool effectEod;
} EffectEod;

typedef struct _BatteryLevel {
    int32_t batteryLevel;
} BatteryLevel;

typedef struct _CurrentKnobSelected {
    int32_t currentKnobSelected;
} CurrentKnobSelected;

typedef struct _SelectGate {
    SelectGate_CategoryGate target;
    bool isOn;
} SelectGate;

typedef struct _SelectEfx {
    SelectEfx_CategoryEfx target;
    bool isOn;
} SelectEfx;

typedef struct _SelectAmp {
    SelectAmp_CategoryAmp target;
    bool isOn;
} SelectAmp;

typedef struct _SelectIr {
    CategoryIr target;
} SelectIr;

typedef struct _SelectMod {
    SelectMod_CategoryMod target;
    bool isOn;
} SelectMod;

typedef struct _SelectDelay {
    SelectDelay_CategoryDelay target;
    bool isOn;
} SelectDelay;

typedef struct _SelectReverb {
    SelectReverb_CategoryReverb target;
    bool isOn;
} SelectReverb;

typedef struct _ParamGateNoiseGate {
    float threshold;
    float openingTime;
    float closingTime;
    float holdTime;
} ParamGateNoiseGate;

typedef struct _ParamGateLimiter {
    float threshold;
    float attack;
    float release;
    float gain;
} ParamGateLimiter;

typedef struct _ParamGateCompressor {
    float threshold;
    float attack;
    float release;
    float gain;
    float ratio;
    float hysteresis;
} ParamGateCompressor;

typedef struct _ParamEfxOverdrive {
    float drive;
    float treble;
    float level;
} ParamEfxOverdrive;

typedef struct _ParamEfxDistortion {
    float distortion;
    float treble;
    float level;
} ParamEfxDistortion;

typedef struct _ParamEfxFuzz {
    float fuzz;
    float treble;
    float level;
} ParamEfxFuzz;

typedef struct _ParamEfxBitCrusher {
    float bitsDynamicRange;
    float sampleRate;
} ParamEfxBitCrusher;

typedef struct _ParamAmpFender {
    float gain;
    float low;
    float middle;
    float high;
    float presence;
} ParamAmpFender;

typedef struct _ParamAmpMarshall {
    float gain;
    float low;
    float middle;
    float high;
    float presence;
} ParamAmpMarshall;

typedef struct _ParamAmpVox {
    float gain;
    float low;
    float middle;
    float high;
    float presence;
} ParamAmpVox;

typedef struct _ParamAmpAcoustic {
    float gain;
    float low;
    float middle;
    float high;
    float presence;
} ParamAmpAcoustic;

typedef struct _ParamIrFender {
    float wet;
} ParamIrFender;

typedef struct _ParamIrMarshall {
    float wet;
} ParamIrMarshall;

typedef struct _ParamIrVox {
    float wet;
} ParamIrVox;

typedef struct _ParamIrAcoustic {
    float wet;
} ParamIrAcoustic;

typedef struct _ParamModFlange {
    float offset;
    float depth;
    float frequency;
} ParamModFlange;

typedef struct _ParamModChorus {
    int32_t voices;
} ParamModChorus;

typedef struct _ParamModTremolo {
    float depth;
    float frequency;
} ParamModTremolo;

typedef struct _ParamModPhaser {
    float frequency;
    float depthTop;
    float depthBottom;
    float mix;
    float feedback;
    int32_t stages;
} ParamModPhaser;

typedef struct _ParamModVibrato {
    float frequency;
    float percent;
} ParamModVibrato;

typedef struct _ParamDelayEcho {
    float gap;
    float decay;
} ParamDelayEcho;

typedef struct _ParamDelayDelay {
    float gap;
    float mix;
    float feedback;
} ParamDelayDelay;

typedef struct _ParamReverbRoom {
    float roomsize;
    float damping;
    float wet;
} ParamReverbRoom;

typedef struct _ParamReverbHall {
    float roomsize;
    float damping;
    float wet;
} ParamReverbHall;

typedef struct _ParamReverbPlate {
    float roomsize;
    float damping;
    float wet;
} ParamReverbPlate;

typedef struct _ParamReverbSpring {
    float roomsize;
    float damping;
    float wet;
} ParamReverbSpring;

typedef struct _DiagReq {
    DiagCode code;
} DiagReq;

typedef struct _DiagRespPOC {
    int32_t powerOnCount;
} DiagRespPOC;

typedef struct _DiagRespFirstParing {
    int64_t FirstParingTimeEpoch;
} DiagRespFirstParing;

typedef struct _DiagRespErrCode {
    int32_t errCode;
} DiagRespErrCode;

/* Save IR Request */
typedef struct _bulkIrStartReq {
    pb_callback_t irName;
    int32_t sequenceNumber;
    pb_callback_t data;
} bulkIrStartReq;

typedef struct _bulkIrReq {
    pb_callback_t data;
    int32_t sequenceNumber;
} bulkIrReq;

typedef struct _bulkIrEndReq {
    pb_callback_t data;
    int32_t sequenceNumber;
} bulkIrEndReq;

/* Save IR Response */
typedef struct _bulkIrRes {
    bool done;
    int32_t sequenceNumber;
} bulkIrRes;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _MessageID_MIN MessageID_ACK
#define _MessageID_MAX MessageID_PARAM_REVERB_SPRING
#define _MessageID_ARRAYSIZE ((MessageID)(MessageID_PARAM_REVERB_SPRING+1))

#define _CategoryIr_MIN CategoryIr_IR_KLON
#define _CategoryIr_MAX CategoryIr_IR_ACOUSTIC
#define _CategoryIr_ARRAYSIZE ((CategoryIr)(CategoryIr_IR_ACOUSTIC+1))

#define _DiagCode_MIN DiagCode_POWER_ON_COUNT
#define _DiagCode_MAX DiagCode_ERROR_CODE
#define _DiagCode_ARRAYSIZE ((DiagCode)(DiagCode_ERROR_CODE+1))

#define _Nack_ERROR_CODE_MIN Nack_ERROR_CODE_INVALID_MESSAGE_ID
#define _Nack_ERROR_CODE_MAX Nack_ERROR_CODE_TIMEOUT
#define _Nack_ERROR_CODE_ARRAYSIZE ((Nack_ERROR_CODE)(Nack_ERROR_CODE_TIMEOUT+1))

#define _SelectGate_CategoryGate_MIN SelectGate_CategoryGate_NOISE_GATE
#define _SelectGate_CategoryGate_MAX SelectGate_CategoryGate_COMPRESSOR
#define _SelectGate_CategoryGate_ARRAYSIZE ((SelectGate_CategoryGate)(SelectGate_CategoryGate_COMPRESSOR+1))

#define _SelectEfx_CategoryEfx_MIN SelectEfx_CategoryEfx_OVERDRIVE
#define _SelectEfx_CategoryEfx_MAX SelectEfx_CategoryEfx_BIT_CRUSHER
#define _SelectEfx_CategoryEfx_ARRAYSIZE ((SelectEfx_CategoryEfx)(SelectEfx_CategoryEfx_BIT_CRUSHER+1))

#define _SelectAmp_CategoryAmp_MIN SelectAmp_CategoryAmp_FENDER
#define _SelectAmp_CategoryAmp_MAX SelectAmp_CategoryAmp_ACOUSTIC
#define _SelectAmp_CategoryAmp_ARRAYSIZE ((SelectAmp_CategoryAmp)(SelectAmp_CategoryAmp_ACOUSTIC+1))

#define _SelectMod_CategoryMod_MIN SelectMod_CategoryMod_FLANGE
#define _SelectMod_CategoryMod_MAX SelectMod_CategoryMod_VIBRATO
#define _SelectMod_CategoryMod_ARRAYSIZE ((SelectMod_CategoryMod)(SelectMod_CategoryMod_VIBRATO+1))

#define _SelectDelay_CategoryDelay_MIN SelectDelay_CategoryDelay_ECHO
#define _SelectDelay_CategoryDelay_MAX SelectDelay_CategoryDelay_DELAY
#define _SelectDelay_CategoryDelay_ARRAYSIZE ((SelectDelay_CategoryDelay)(SelectDelay_CategoryDelay_DELAY+1))

#define _SelectReverb_CategoryReverb_MIN SelectReverb_CategoryReverb_ROOM
#define _SelectReverb_CategoryReverb_MAX SelectReverb_CategoryReverb_PLATE
#define _SelectReverb_CategoryReverb_ARRAYSIZE ((SelectReverb_CategoryReverb)(SelectReverb_CategoryReverb_PLATE+1))

#define _DiagRespErrCode_ErrorCode_MIN DiagRespErrCode_ErrorCode_DIAG_ERR_UNKNOWN_DIAG_ID
#define _DiagRespErrCode_ErrorCode_MAX DiagRespErrCode_ErrorCode_DIAG_ERR_INVALID_DIAG_DATA
#define _DiagRespErrCode_ErrorCode_ARRAYSIZE ((DiagRespErrCode_ErrorCode)(DiagRespErrCode_ErrorCode_DIAG_ERR_INVALID_DIAG_DATA+1))


#define Nack_errorCode_ENUMTYPE Nack_ERROR_CODE












#define SelectGate_target_ENUMTYPE SelectGate_CategoryGate

#define SelectEfx_target_ENUMTYPE SelectEfx_CategoryEfx

#define SelectAmp_target_ENUMTYPE SelectAmp_CategoryAmp

#define SelectIr_target_ENUMTYPE CategoryIr

#define SelectMod_target_ENUMTYPE SelectMod_CategoryMod

#define SelectDelay_target_ENUMTYPE SelectDelay_CategoryDelay

#define SelectReverb_target_ENUMTYPE SelectReverb_CategoryReverb



























#define DiagReq_code_ENUMTYPE DiagCode









/* Initializer values for message structs */
#define Ack_init_default                         {0}
#define Nack_init_default                        {_Nack_ERROR_CODE_MIN}
#define ReqSetupInfo_init_default                {0}
#define FirstContact_init_default                {0, {{NULL}, NULL}, {{NULL}, NULL}}
#define FirstContactResp_init_default            {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define ChangeGuitarName_init_default            {{{NULL}, NULL}}
#define TunerOnOff_init_default                  {0}
#define TunerFrequency_init_default              {0}
#define KnobClicked_init_default                 {0}
#define KnobMatchingStart_init_default           {0}
#define EffectEod_init_default                   {0}
#define BatteryLevel_init_default                {0}
#define CurrentKnobSelected_init_default         {0}
#define SelectGate_init_default                  {_SelectGate_CategoryGate_MIN, 0}
#define SelectEfx_init_default                   {_SelectEfx_CategoryEfx_MIN, 0}
#define SelectAmp_init_default                   {_SelectAmp_CategoryAmp_MIN, 0}
#define SelectIr_init_default                    {_CategoryIr_MIN}
#define SelectMod_init_default                   {_SelectMod_CategoryMod_MIN, 0}
#define SelectDelay_init_default                 {_SelectDelay_CategoryDelay_MIN, 0}
#define SelectReverb_init_default                {_SelectReverb_CategoryReverb_MIN, 0}
#define ParamGateNoiseGate_init_default          {0, 0, 0, 0}
#define ParamGateLimiter_init_default            {0, 0, 0, 0}
#define ParamGateCompressor_init_default         {0, 0, 0, 0, 0, 0}
#define ParamEfxOverdrive_init_default           {0, 0, 0}
#define ParamEfxDistortion_init_default          {0, 0, 0}
#define ParamEfxFuzz_init_default                {0, 0, 0}
#define ParamEfxBitCrusher_init_default          {0, 0}
#define ParamAmpFender_init_default              {0, 0, 0, 0, 0}
#define ParamAmpMarshall_init_default            {0, 0, 0, 0, 0}
#define ParamAmpVox_init_default                 {0, 0, 0, 0, 0}
#define ParamAmpAcoustic_init_default            {0, 0, 0, 0, 0}
#define ParamIrFender_init_default               {0}
#define ParamIrMarshall_init_default             {0}
#define ParamIrVox_init_default                  {0}
#define ParamIrAcoustic_init_default             {0}
#define ParamModFlange_init_default              {0, 0, 0}
#define ParamModChorus_init_default              {0}
#define ParamModTremolo_init_default             {0, 0}
#define ParamModPhaser_init_default              {0, 0, 0, 0, 0, 0}
#define ParamModVibrato_init_default             {0, 0}
#define ParamDelayEcho_init_default              {0, 0}
#define ParamDelayDelay_init_default             {0, 0, 0}
#define ParamReverbRoom_init_default             {0, 0, 0}
#define ParamReverbHall_init_default             {0, 0, 0}
#define ParamReverbPlate_init_default            {0, 0, 0}
#define ParamReverbSpring_init_default           {0, 0, 0}
#define DiagReq_init_default                     {_DiagCode_MIN}
#define DiagRespPOC_init_default                 {0}
#define DiagRespFirstParing_init_default         {0}
#define DiagRespErrCode_init_default             {0}
#define bulkIrStartReq_init_default              {{{NULL}, NULL}, 0, {{NULL}, NULL}}
#define bulkIrReq_init_default                   {{{NULL}, NULL}, 0}
#define bulkIrEndReq_init_default                {{{NULL}, NULL}, 0}
#define bulkIrRes_init_default                   {0, 0}
#define Ack_init_zero                            {0}
#define Nack_init_zero                           {_Nack_ERROR_CODE_MIN}
#define ReqSetupInfo_init_zero                   {0}
#define FirstContact_init_zero                   {0, {{NULL}, NULL}, {{NULL}, NULL}}
#define FirstContactResp_init_zero               {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define ChangeGuitarName_init_zero               {{{NULL}, NULL}}
#define TunerOnOff_init_zero                     {0}
#define TunerFrequency_init_zero                 {0}
#define KnobClicked_init_zero                    {0}
#define KnobMatchingStart_init_zero              {0}
#define EffectEod_init_zero                      {0}
#define BatteryLevel_init_zero                   {0}
#define CurrentKnobSelected_init_zero            {0}
#define SelectGate_init_zero                     {_SelectGate_CategoryGate_MIN, 0}
#define SelectEfx_init_zero                      {_SelectEfx_CategoryEfx_MIN, 0}
#define SelectAmp_init_zero                      {_SelectAmp_CategoryAmp_MIN, 0}
#define SelectIr_init_zero                       {_CategoryIr_MIN}
#define SelectMod_init_zero                      {_SelectMod_CategoryMod_MIN, 0}
#define SelectDelay_init_zero                    {_SelectDelay_CategoryDelay_MIN, 0}
#define SelectReverb_init_zero                   {_SelectReverb_CategoryReverb_MIN, 0}
#define ParamGateNoiseGate_init_zero             {0, 0, 0, 0}
#define ParamGateLimiter_init_zero               {0, 0, 0, 0}
#define ParamGateCompressor_init_zero            {0, 0, 0, 0, 0, 0}
#define ParamEfxOverdrive_init_zero              {0, 0, 0}
#define ParamEfxDistortion_init_zero             {0, 0, 0}
#define ParamEfxFuzz_init_zero                   {0, 0, 0}
#define ParamEfxBitCrusher_init_zero             {0, 0}
#define ParamAmpFender_init_zero                 {0, 0, 0, 0, 0}
#define ParamAmpMarshall_init_zero               {0, 0, 0, 0, 0}
#define ParamAmpVox_init_zero                    {0, 0, 0, 0, 0}
#define ParamAmpAcoustic_init_zero               {0, 0, 0, 0, 0}
#define ParamIrFender_init_zero                  {0}
#define ParamIrMarshall_init_zero                {0}
#define ParamIrVox_init_zero                     {0}
#define ParamIrAcoustic_init_zero                {0}
#define ParamModFlange_init_zero                 {0, 0, 0}
#define ParamModChorus_init_zero                 {0}
#define ParamModTremolo_init_zero                {0, 0}
#define ParamModPhaser_init_zero                 {0, 0, 0, 0, 0, 0}
#define ParamModVibrato_init_zero                {0, 0}
#define ParamDelayEcho_init_zero                 {0, 0}
#define ParamDelayDelay_init_zero                {0, 0, 0}
#define ParamReverbRoom_init_zero                {0, 0, 0}
#define ParamReverbHall_init_zero                {0, 0, 0}
#define ParamReverbPlate_init_zero               {0, 0, 0}
#define ParamReverbSpring_init_zero              {0, 0, 0}
#define DiagReq_init_zero                        {_DiagCode_MIN}
#define DiagRespPOC_init_zero                    {0}
#define DiagRespFirstParing_init_zero            {0}
#define DiagRespErrCode_init_zero                {0}
#define bulkIrStartReq_init_zero                 {{{NULL}, NULL}, 0, {{NULL}, NULL}}
#define bulkIrReq_init_zero                      {{{NULL}, NULL}, 0}
#define bulkIrEndReq_init_zero                   {{{NULL}, NULL}, 0}
#define bulkIrRes_init_zero                      {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Ack_receivedMessageLength_tag            1
#define Nack_errorCode_tag                       1
#define FirstContact_currentTimeEpoch_tag        1
#define FirstContact_phoneMachineId_tag          2
#define FirstContact_appVersion_tag              3
#define FirstContactResp_guitarName_tag          1
#define FirstContactResp_guitarModelName_tag     2
#define FirstContactResp_firmwareVersion_tag     3
#define ChangeGuitarName_guitarName_tag          1
#define TunerOnOff_isOn_tag                      1
#define TunerFrequency_tunerFrequency_tag        1
#define KnobClicked_knobNumber_tag               1
#define KnobMatchingStart_knobNumber_tag         1
#define EffectEod_effectEod_tag                  1
#define BatteryLevel_batteryLevel_tag            1
#define CurrentKnobSelected_currentKnobSelected_tag 1
#define SelectGate_target_tag                    1
#define SelectGate_isOn_tag                      2
#define SelectEfx_target_tag                     1
#define SelectEfx_isOn_tag                       2
#define SelectAmp_target_tag                     1
#define SelectAmp_isOn_tag                       2
#define SelectIr_target_tag                      1
#define SelectMod_target_tag                     1
#define SelectMod_isOn_tag                       2
#define SelectDelay_target_tag                   1
#define SelectDelay_isOn_tag                     2
#define SelectReverb_target_tag                  1
#define SelectReverb_isOn_tag                    2
#define ParamGateNoiseGate_threshold_tag         1
#define ParamGateNoiseGate_openingTime_tag       2
#define ParamGateNoiseGate_closingTime_tag       3
#define ParamGateNoiseGate_holdTime_tag          4
#define ParamGateLimiter_threshold_tag           1
#define ParamGateLimiter_attack_tag              2
#define ParamGateLimiter_release_tag             3
#define ParamGateLimiter_gain_tag                4
#define ParamGateCompressor_threshold_tag        1
#define ParamGateCompressor_attack_tag           2
#define ParamGateCompressor_release_tag          3
#define ParamGateCompressor_gain_tag             4
#define ParamGateCompressor_ratio_tag            5
#define ParamGateCompressor_hysteresis_tag       6
#define ParamEfxOverdrive_drive_tag              1
#define ParamEfxOverdrive_treble_tag             2
#define ParamEfxOverdrive_level_tag              3
#define ParamEfxDistortion_distortion_tag        1
#define ParamEfxDistortion_treble_tag            2
#define ParamEfxDistortion_level_tag             3
#define ParamEfxFuzz_fuzz_tag                    1
#define ParamEfxFuzz_treble_tag                  2
#define ParamEfxFuzz_level_tag                   3
#define ParamEfxBitCrusher_bitsDynamicRange_tag  1
#define ParamEfxBitCrusher_sampleRate_tag        2
#define ParamAmpFender_gain_tag                  1
#define ParamAmpFender_low_tag                   2
#define ParamAmpFender_middle_tag                3
#define ParamAmpFender_high_tag                  4
#define ParamAmpFender_presence_tag              5
#define ParamAmpMarshall_gain_tag                1
#define ParamAmpMarshall_low_tag                 2
#define ParamAmpMarshall_middle_tag              3
#define ParamAmpMarshall_high_tag                4
#define ParamAmpMarshall_presence_tag            5
#define ParamAmpVox_gain_tag                     1
#define ParamAmpVox_low_tag                      2
#define ParamAmpVox_middle_tag                   3
#define ParamAmpVox_high_tag                     4
#define ParamAmpVox_presence_tag                 5
#define ParamAmpAcoustic_gain_tag                1
#define ParamAmpAcoustic_low_tag                 2
#define ParamAmpAcoustic_middle_tag              3
#define ParamAmpAcoustic_high_tag                4
#define ParamAmpAcoustic_presence_tag            5
#define ParamIrFender_wet_tag                    1
#define ParamIrMarshall_wet_tag                  1
#define ParamIrVox_wet_tag                       1
#define ParamIrAcoustic_wet_tag                  1
#define ParamModFlange_offset_tag                1
#define ParamModFlange_depth_tag                 2
#define ParamModFlange_frequency_tag             3
#define ParamModChorus_voices_tag                1
#define ParamModTremolo_depth_tag                1
#define ParamModTremolo_frequency_tag            2
#define ParamModPhaser_frequency_tag             1
#define ParamModPhaser_depthTop_tag              2
#define ParamModPhaser_depthBottom_tag           3
#define ParamModPhaser_mix_tag                   4
#define ParamModPhaser_feedback_tag              5
#define ParamModPhaser_stages_tag                6
#define ParamModVibrato_frequency_tag            1
#define ParamModVibrato_percent_tag              2
#define ParamDelayEcho_gap_tag                   1
#define ParamDelayEcho_decay_tag                 2
#define ParamDelayDelay_gap_tag                  1
#define ParamDelayDelay_mix_tag                  2
#define ParamDelayDelay_feedback_tag             3
#define ParamReverbRoom_roomsize_tag             1
#define ParamReverbRoom_damping_tag              2
#define ParamReverbRoom_wet_tag                  3
#define ParamReverbHall_roomsize_tag             1
#define ParamReverbHall_damping_tag              2
#define ParamReverbHall_wet_tag                  3
#define ParamReverbPlate_roomsize_tag            1
#define ParamReverbPlate_damping_tag             2
#define ParamReverbPlate_wet_tag                 3
#define ParamReverbSpring_roomsize_tag           1
#define ParamReverbSpring_damping_tag            2
#define ParamReverbSpring_wet_tag                3
#define DiagReq_code_tag                         1
#define DiagRespPOC_powerOnCount_tag             1
#define DiagRespFirstParing_FirstParingTimeEpoch_tag 1
#define DiagRespErrCode_errCode_tag              1
#define bulkIrStartReq_irName_tag                1
#define bulkIrStartReq_sequenceNumber_tag        2
#define bulkIrStartReq_data_tag                  3
#define bulkIrReq_data_tag                       1
#define bulkIrReq_sequenceNumber_tag             2
#define bulkIrEndReq_data_tag                    1
#define bulkIrEndReq_sequenceNumber_tag          2
#define bulkIrRes_done_tag                       1
#define bulkIrRes_sequenceNumber_tag             2

/* Struct field encoding specification for nanopb */
#define Ack_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    receivedMessageLength,   1)
#define Ack_CALLBACK NULL
#define Ack_DEFAULT NULL

#define Nack_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    errorCode,         1)
#define Nack_CALLBACK NULL
#define Nack_DEFAULT NULL

#define ReqSetupInfo_FIELDLIST(X, a) \

#define ReqSetupInfo_CALLBACK NULL
#define ReqSetupInfo_DEFAULT NULL

#define FirstContact_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT64,    currentTimeEpoch,   1) \
X(a, CALLBACK, SINGULAR, STRING,   phoneMachineId,    2) \
X(a, CALLBACK, SINGULAR, STRING,   appVersion,        3)
#define FirstContact_CALLBACK pb_default_field_callback
#define FirstContact_DEFAULT NULL

#define FirstContactResp_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   guitarName,        1) \
X(a, CALLBACK, SINGULAR, STRING,   guitarModelName,   2) \
X(a, CALLBACK, SINGULAR, STRING,   firmwareVersion,   3)
#define FirstContactResp_CALLBACK pb_default_field_callback
#define FirstContactResp_DEFAULT NULL

#define ChangeGuitarName_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   guitarName,        1)
#define ChangeGuitarName_CALLBACK pb_default_field_callback
#define ChangeGuitarName_DEFAULT NULL

#define TunerOnOff_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              1)
#define TunerOnOff_CALLBACK NULL
#define TunerOnOff_DEFAULT NULL

#define TunerFrequency_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    tunerFrequency,    1)
#define TunerFrequency_CALLBACK NULL
#define TunerFrequency_DEFAULT NULL

#define KnobClicked_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    knobNumber,        1)
#define KnobClicked_CALLBACK NULL
#define KnobClicked_DEFAULT NULL

#define KnobMatchingStart_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    knobNumber,        1)
#define KnobMatchingStart_CALLBACK NULL
#define KnobMatchingStart_DEFAULT NULL

#define EffectEod_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     effectEod,         1)
#define EffectEod_CALLBACK NULL
#define EffectEod_DEFAULT NULL

#define BatteryLevel_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    batteryLevel,      1)
#define BatteryLevel_CALLBACK NULL
#define BatteryLevel_DEFAULT NULL

#define CurrentKnobSelected_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    currentKnobSelected,   1)
#define CurrentKnobSelected_CALLBACK NULL
#define CurrentKnobSelected_DEFAULT NULL

#define SelectGate_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    target,            1) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              2)
#define SelectGate_CALLBACK NULL
#define SelectGate_DEFAULT NULL

#define SelectEfx_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    target,            1) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              2)
#define SelectEfx_CALLBACK NULL
#define SelectEfx_DEFAULT NULL

#define SelectAmp_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    target,            1) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              2)
#define SelectAmp_CALLBACK NULL
#define SelectAmp_DEFAULT NULL

#define SelectIr_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    target,            1)
#define SelectIr_CALLBACK NULL
#define SelectIr_DEFAULT NULL

#define SelectMod_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    target,            1) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              2)
#define SelectMod_CALLBACK NULL
#define SelectMod_DEFAULT NULL

#define SelectDelay_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    target,            1) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              2)
#define SelectDelay_CALLBACK NULL
#define SelectDelay_DEFAULT NULL

#define SelectReverb_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    target,            1) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              2)
#define SelectReverb_CALLBACK NULL
#define SelectReverb_DEFAULT NULL

#define ParamGateNoiseGate_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    threshold,         1) \
X(a, STATIC,   SINGULAR, FLOAT,    openingTime,       2) \
X(a, STATIC,   SINGULAR, FLOAT,    closingTime,       3) \
X(a, STATIC,   SINGULAR, FLOAT,    holdTime,          4)
#define ParamGateNoiseGate_CALLBACK NULL
#define ParamGateNoiseGate_DEFAULT NULL

#define ParamGateLimiter_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    threshold,         1) \
X(a, STATIC,   SINGULAR, FLOAT,    attack,            2) \
X(a, STATIC,   SINGULAR, FLOAT,    release,           3) \
X(a, STATIC,   SINGULAR, FLOAT,    gain,              4)
#define ParamGateLimiter_CALLBACK NULL
#define ParamGateLimiter_DEFAULT NULL

#define ParamGateCompressor_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    threshold,         1) \
X(a, STATIC,   SINGULAR, FLOAT,    attack,            2) \
X(a, STATIC,   SINGULAR, FLOAT,    release,           3) \
X(a, STATIC,   SINGULAR, FLOAT,    gain,              4) \
X(a, STATIC,   SINGULAR, FLOAT,    ratio,             5) \
X(a, STATIC,   SINGULAR, FLOAT,    hysteresis,        6)
#define ParamGateCompressor_CALLBACK NULL
#define ParamGateCompressor_DEFAULT NULL

#define ParamEfxOverdrive_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    drive,             1) \
X(a, STATIC,   SINGULAR, FLOAT,    treble,            2) \
X(a, STATIC,   SINGULAR, FLOAT,    level,             3)
#define ParamEfxOverdrive_CALLBACK NULL
#define ParamEfxOverdrive_DEFAULT NULL

#define ParamEfxDistortion_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    distortion,        1) \
X(a, STATIC,   SINGULAR, FLOAT,    treble,            2) \
X(a, STATIC,   SINGULAR, FLOAT,    level,             3)
#define ParamEfxDistortion_CALLBACK NULL
#define ParamEfxDistortion_DEFAULT NULL

#define ParamEfxFuzz_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    fuzz,              1) \
X(a, STATIC,   SINGULAR, FLOAT,    treble,            2) \
X(a, STATIC,   SINGULAR, FLOAT,    level,             3)
#define ParamEfxFuzz_CALLBACK NULL
#define ParamEfxFuzz_DEFAULT NULL

#define ParamEfxBitCrusher_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    bitsDynamicRange,   1) \
X(a, STATIC,   SINGULAR, FLOAT,    sampleRate,        2)
#define ParamEfxBitCrusher_CALLBACK NULL
#define ParamEfxBitCrusher_DEFAULT NULL

#define ParamAmpFender_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    gain,              1) \
X(a, STATIC,   SINGULAR, FLOAT,    low,               2) \
X(a, STATIC,   SINGULAR, FLOAT,    middle,            3) \
X(a, STATIC,   SINGULAR, FLOAT,    high,              4) \
X(a, STATIC,   SINGULAR, FLOAT,    presence,          5)
#define ParamAmpFender_CALLBACK NULL
#define ParamAmpFender_DEFAULT NULL

#define ParamAmpMarshall_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    gain,              1) \
X(a, STATIC,   SINGULAR, FLOAT,    low,               2) \
X(a, STATIC,   SINGULAR, FLOAT,    middle,            3) \
X(a, STATIC,   SINGULAR, FLOAT,    high,              4) \
X(a, STATIC,   SINGULAR, FLOAT,    presence,          5)
#define ParamAmpMarshall_CALLBACK NULL
#define ParamAmpMarshall_DEFAULT NULL

#define ParamAmpVox_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    gain,              1) \
X(a, STATIC,   SINGULAR, FLOAT,    low,               2) \
X(a, STATIC,   SINGULAR, FLOAT,    middle,            3) \
X(a, STATIC,   SINGULAR, FLOAT,    high,              4) \
X(a, STATIC,   SINGULAR, FLOAT,    presence,          5)
#define ParamAmpVox_CALLBACK NULL
#define ParamAmpVox_DEFAULT NULL

#define ParamAmpAcoustic_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    gain,              1) \
X(a, STATIC,   SINGULAR, FLOAT,    low,               2) \
X(a, STATIC,   SINGULAR, FLOAT,    middle,            3) \
X(a, STATIC,   SINGULAR, FLOAT,    high,              4) \
X(a, STATIC,   SINGULAR, FLOAT,    presence,          5)
#define ParamAmpAcoustic_CALLBACK NULL
#define ParamAmpAcoustic_DEFAULT NULL

#define ParamIrFender_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    wet,               1)
#define ParamIrFender_CALLBACK NULL
#define ParamIrFender_DEFAULT NULL

#define ParamIrMarshall_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    wet,               1)
#define ParamIrMarshall_CALLBACK NULL
#define ParamIrMarshall_DEFAULT NULL

#define ParamIrVox_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    wet,               1)
#define ParamIrVox_CALLBACK NULL
#define ParamIrVox_DEFAULT NULL

#define ParamIrAcoustic_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    wet,               1)
#define ParamIrAcoustic_CALLBACK NULL
#define ParamIrAcoustic_DEFAULT NULL

#define ParamModFlange_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    offset,            1) \
X(a, STATIC,   SINGULAR, FLOAT,    depth,             2) \
X(a, STATIC,   SINGULAR, FLOAT,    frequency,         3)
#define ParamModFlange_CALLBACK NULL
#define ParamModFlange_DEFAULT NULL

#define ParamModChorus_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    voices,            1)
#define ParamModChorus_CALLBACK NULL
#define ParamModChorus_DEFAULT NULL

#define ParamModTremolo_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    depth,             1) \
X(a, STATIC,   SINGULAR, FLOAT,    frequency,         2)
#define ParamModTremolo_CALLBACK NULL
#define ParamModTremolo_DEFAULT NULL

#define ParamModPhaser_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    frequency,         1) \
X(a, STATIC,   SINGULAR, FLOAT,    depthTop,          2) \
X(a, STATIC,   SINGULAR, FLOAT,    depthBottom,       3) \
X(a, STATIC,   SINGULAR, FLOAT,    mix,               4) \
X(a, STATIC,   SINGULAR, FLOAT,    feedback,          5) \
X(a, STATIC,   SINGULAR, INT32,    stages,            6)
#define ParamModPhaser_CALLBACK NULL
#define ParamModPhaser_DEFAULT NULL

#define ParamModVibrato_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    frequency,         1) \
X(a, STATIC,   SINGULAR, FLOAT,    percent,           2)
#define ParamModVibrato_CALLBACK NULL
#define ParamModVibrato_DEFAULT NULL

#define ParamDelayEcho_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    gap,               1) \
X(a, STATIC,   SINGULAR, FLOAT,    decay,             2)
#define ParamDelayEcho_CALLBACK NULL
#define ParamDelayEcho_DEFAULT NULL

#define ParamDelayDelay_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    gap,               1) \
X(a, STATIC,   SINGULAR, FLOAT,    mix,               2) \
X(a, STATIC,   SINGULAR, FLOAT,    feedback,          3)
#define ParamDelayDelay_CALLBACK NULL
#define ParamDelayDelay_DEFAULT NULL

#define ParamReverbRoom_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    roomsize,          1) \
X(a, STATIC,   SINGULAR, FLOAT,    damping,           2) \
X(a, STATIC,   SINGULAR, FLOAT,    wet,               3)
#define ParamReverbRoom_CALLBACK NULL
#define ParamReverbRoom_DEFAULT NULL

#define ParamReverbHall_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    roomsize,          1) \
X(a, STATIC,   SINGULAR, FLOAT,    damping,           2) \
X(a, STATIC,   SINGULAR, FLOAT,    wet,               3)
#define ParamReverbHall_CALLBACK NULL
#define ParamReverbHall_DEFAULT NULL

#define ParamReverbPlate_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    roomsize,          1) \
X(a, STATIC,   SINGULAR, FLOAT,    damping,           2) \
X(a, STATIC,   SINGULAR, FLOAT,    wet,               3)
#define ParamReverbPlate_CALLBACK NULL
#define ParamReverbPlate_DEFAULT NULL

#define ParamReverbSpring_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    roomsize,          1) \
X(a, STATIC,   SINGULAR, FLOAT,    damping,           2) \
X(a, STATIC,   SINGULAR, FLOAT,    wet,               3)
#define ParamReverbSpring_CALLBACK NULL
#define ParamReverbSpring_DEFAULT NULL

#define DiagReq_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    code,              1)
#define DiagReq_CALLBACK NULL
#define DiagReq_DEFAULT NULL

#define DiagRespPOC_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    powerOnCount,      1)
#define DiagRespPOC_CALLBACK NULL
#define DiagRespPOC_DEFAULT NULL

#define DiagRespFirstParing_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT64,    FirstParingTimeEpoch,   1)
#define DiagRespFirstParing_CALLBACK NULL
#define DiagRespFirstParing_DEFAULT NULL

#define DiagRespErrCode_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    errCode,           1)
#define DiagRespErrCode_CALLBACK NULL
#define DiagRespErrCode_DEFAULT NULL

#define bulkIrStartReq_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   irName,            1) \
X(a, STATIC,   SINGULAR, INT32,    sequenceNumber,    2) \
X(a, CALLBACK, REPEATED, FLOAT,    data,              3)
#define bulkIrStartReq_CALLBACK pb_default_field_callback
#define bulkIrStartReq_DEFAULT NULL

#define bulkIrReq_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, FLOAT,    data,              1) \
X(a, STATIC,   SINGULAR, INT32,    sequenceNumber,    2)
#define bulkIrReq_CALLBACK pb_default_field_callback
#define bulkIrReq_DEFAULT NULL

#define bulkIrEndReq_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, FLOAT,    data,              1) \
X(a, STATIC,   SINGULAR, INT32,    sequenceNumber,    2)
#define bulkIrEndReq_CALLBACK pb_default_field_callback
#define bulkIrEndReq_DEFAULT NULL

#define bulkIrRes_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     done,              1) \
X(a, STATIC,   SINGULAR, INT32,    sequenceNumber,    2)
#define bulkIrRes_CALLBACK NULL
#define bulkIrRes_DEFAULT NULL

extern const pb_msgdesc_t Ack_msg;
extern const pb_msgdesc_t Nack_msg;
extern const pb_msgdesc_t ReqSetupInfo_msg;
extern const pb_msgdesc_t FirstContact_msg;
extern const pb_msgdesc_t FirstContactResp_msg;
extern const pb_msgdesc_t ChangeGuitarName_msg;
extern const pb_msgdesc_t TunerOnOff_msg;
extern const pb_msgdesc_t TunerFrequency_msg;
extern const pb_msgdesc_t KnobClicked_msg;
extern const pb_msgdesc_t KnobMatchingStart_msg;
extern const pb_msgdesc_t EffectEod_msg;
extern const pb_msgdesc_t BatteryLevel_msg;
extern const pb_msgdesc_t CurrentKnobSelected_msg;
extern const pb_msgdesc_t SelectGate_msg;
extern const pb_msgdesc_t SelectEfx_msg;
extern const pb_msgdesc_t SelectAmp_msg;
extern const pb_msgdesc_t SelectIr_msg;
extern const pb_msgdesc_t SelectMod_msg;
extern const pb_msgdesc_t SelectDelay_msg;
extern const pb_msgdesc_t SelectReverb_msg;
extern const pb_msgdesc_t ParamGateNoiseGate_msg;
extern const pb_msgdesc_t ParamGateLimiter_msg;
extern const pb_msgdesc_t ParamGateCompressor_msg;
extern const pb_msgdesc_t ParamEfxOverdrive_msg;
extern const pb_msgdesc_t ParamEfxDistortion_msg;
extern const pb_msgdesc_t ParamEfxFuzz_msg;
extern const pb_msgdesc_t ParamEfxBitCrusher_msg;
extern const pb_msgdesc_t ParamAmpFender_msg;
extern const pb_msgdesc_t ParamAmpMarshall_msg;
extern const pb_msgdesc_t ParamAmpVox_msg;
extern const pb_msgdesc_t ParamAmpAcoustic_msg;
extern const pb_msgdesc_t ParamIrFender_msg;
extern const pb_msgdesc_t ParamIrMarshall_msg;
extern const pb_msgdesc_t ParamIrVox_msg;
extern const pb_msgdesc_t ParamIrAcoustic_msg;
extern const pb_msgdesc_t ParamModFlange_msg;
extern const pb_msgdesc_t ParamModChorus_msg;
extern const pb_msgdesc_t ParamModTremolo_msg;
extern const pb_msgdesc_t ParamModPhaser_msg;
extern const pb_msgdesc_t ParamModVibrato_msg;
extern const pb_msgdesc_t ParamDelayEcho_msg;
extern const pb_msgdesc_t ParamDelayDelay_msg;
extern const pb_msgdesc_t ParamReverbRoom_msg;
extern const pb_msgdesc_t ParamReverbHall_msg;
extern const pb_msgdesc_t ParamReverbPlate_msg;
extern const pb_msgdesc_t ParamReverbSpring_msg;
extern const pb_msgdesc_t DiagReq_msg;
extern const pb_msgdesc_t DiagRespPOC_msg;
extern const pb_msgdesc_t DiagRespFirstParing_msg;
extern const pb_msgdesc_t DiagRespErrCode_msg;
extern const pb_msgdesc_t bulkIrStartReq_msg;
extern const pb_msgdesc_t bulkIrReq_msg;
extern const pb_msgdesc_t bulkIrEndReq_msg;
extern const pb_msgdesc_t bulkIrRes_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Ack_fields &Ack_msg
#define Nack_fields &Nack_msg
#define ReqSetupInfo_fields &ReqSetupInfo_msg
#define FirstContact_fields &FirstContact_msg
#define FirstContactResp_fields &FirstContactResp_msg
#define ChangeGuitarName_fields &ChangeGuitarName_msg
#define TunerOnOff_fields &TunerOnOff_msg
#define TunerFrequency_fields &TunerFrequency_msg
#define KnobClicked_fields &KnobClicked_msg
#define KnobMatchingStart_fields &KnobMatchingStart_msg
#define EffectEod_fields &EffectEod_msg
#define BatteryLevel_fields &BatteryLevel_msg
#define CurrentKnobSelected_fields &CurrentKnobSelected_msg
#define SelectGate_fields &SelectGate_msg
#define SelectEfx_fields &SelectEfx_msg
#define SelectAmp_fields &SelectAmp_msg
#define SelectIr_fields &SelectIr_msg
#define SelectMod_fields &SelectMod_msg
#define SelectDelay_fields &SelectDelay_msg
#define SelectReverb_fields &SelectReverb_msg
#define ParamGateNoiseGate_fields &ParamGateNoiseGate_msg
#define ParamGateLimiter_fields &ParamGateLimiter_msg
#define ParamGateCompressor_fields &ParamGateCompressor_msg
#define ParamEfxOverdrive_fields &ParamEfxOverdrive_msg
#define ParamEfxDistortion_fields &ParamEfxDistortion_msg
#define ParamEfxFuzz_fields &ParamEfxFuzz_msg
#define ParamEfxBitCrusher_fields &ParamEfxBitCrusher_msg
#define ParamAmpFender_fields &ParamAmpFender_msg
#define ParamAmpMarshall_fields &ParamAmpMarshall_msg
#define ParamAmpVox_fields &ParamAmpVox_msg
#define ParamAmpAcoustic_fields &ParamAmpAcoustic_msg
#define ParamIrFender_fields &ParamIrFender_msg
#define ParamIrMarshall_fields &ParamIrMarshall_msg
#define ParamIrVox_fields &ParamIrVox_msg
#define ParamIrAcoustic_fields &ParamIrAcoustic_msg
#define ParamModFlange_fields &ParamModFlange_msg
#define ParamModChorus_fields &ParamModChorus_msg
#define ParamModTremolo_fields &ParamModTremolo_msg
#define ParamModPhaser_fields &ParamModPhaser_msg
#define ParamModVibrato_fields &ParamModVibrato_msg
#define ParamDelayEcho_fields &ParamDelayEcho_msg
#define ParamDelayDelay_fields &ParamDelayDelay_msg
#define ParamReverbRoom_fields &ParamReverbRoom_msg
#define ParamReverbHall_fields &ParamReverbHall_msg
#define ParamReverbPlate_fields &ParamReverbPlate_msg
#define ParamReverbSpring_fields &ParamReverbSpring_msg
#define DiagReq_fields &DiagReq_msg
#define DiagRespPOC_fields &DiagRespPOC_msg
#define DiagRespFirstParing_fields &DiagRespFirstParing_msg
#define DiagRespErrCode_fields &DiagRespErrCode_msg
#define bulkIrStartReq_fields &bulkIrStartReq_msg
#define bulkIrReq_fields &bulkIrReq_msg
#define bulkIrEndReq_fields &bulkIrEndReq_msg
#define bulkIrRes_fields &bulkIrRes_msg

/* Maximum encoded size of messages (where known) */
/* FirstContact_size depends on runtime parameters */
/* FirstContactResp_size depends on runtime parameters */
/* ChangeGuitarName_size depends on runtime parameters */
/* bulkIrStartReq_size depends on runtime parameters */
/* bulkIrReq_size depends on runtime parameters */
/* bulkIrEndReq_size depends on runtime parameters */
#define Ack_size                                 11
#define BatteryLevel_size                        11
#define CurrentKnobSelected_size                 11
#define DiagReq_size                             2
#define DiagRespErrCode_size                     11
#define DiagRespFirstParing_size                 11
#define DiagRespPOC_size                         11
#define EffectEod_size                           2
#define KnobClicked_size                         11
#define KnobMatchingStart_size                   11
#define Nack_size                                2
#define ParamAmpAcoustic_size                    25
#define ParamAmpFender_size                      25
#define ParamAmpMarshall_size                    25
#define ParamAmpVox_size                         25
#define ParamDelayDelay_size                     15
#define ParamDelayEcho_size                      10
#define ParamEfxBitCrusher_size                  10
#define ParamEfxDistortion_size                  15
#define ParamEfxFuzz_size                        15
#define ParamEfxOverdrive_size                   15
#define ParamGateCompressor_size                 30
#define ParamGateLimiter_size                    20
#define ParamGateNoiseGate_size                  20
#define ParamIrAcoustic_size                     5
#define ParamIrFender_size                       5
#define ParamIrMarshall_size                     5
#define ParamIrVox_size                          5
#define ParamModChorus_size                      11
#define ParamModFlange_size                      15
#define ParamModPhaser_size                      36
#define ParamModTremolo_size                     10
#define ParamModVibrato_size                     10
#define ParamReverbHall_size                     15
#define ParamReverbPlate_size                    15
#define ParamReverbRoom_size                     15
#define ParamReverbSpring_size                   15
#define ReqSetupInfo_size                        0
#define SelectAmp_size                           4
#define SelectDelay_size                         4
#define SelectEfx_size                           4
#define SelectGate_size                          4
#define SelectIr_size                            2
#define SelectMod_size                           4
#define SelectReverb_size                        4
#define TunerFrequency_size                      5
#define TunerOnOff_size                          2
#define bulkIrRes_size                           13

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
