/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_THE_RED_PB_H_INCLUDED
#define PB_THE_RED_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _MessageID {
    MessageID_INVALID = 0,
    MessageID_ACK = 1,
    MessageID_NACK = 2,
    MessageID_INIT_FROM_APP = 3,
    MessageID_INIT_FROM_GUITAR = 4,
    MessageID_REQ_INIT_FROM_GUITAR = 5,
    MessageID_CHANGE_GUITAR_NAME = 6,
    MessageID_TUNER_ON_OFF = 7,
    MessageID_TUNER_FREQUENCY = 8,
    MessageID_KNOB_CLICKED = 9,
    MessageID_KNOB_MATCHING_START = 10,
    MessageID_BATTERY_LEVEL = 11,
    MessageID_PARAM_GATE = 12,
    MessageID_PARAM_EFX_TS90 = 13,
    MessageID_PARAM_EFX_SD10 = 14,
    MessageID_PARAM_EFX_RAT = 15,
    MessageID_PARAM_EFX_DISTORTION = 16,
    MessageID_PARAM_EFX_AUTOWAH = 17,
    MessageID_PARAM_EFX_ACOUSTIC = 18,
    MessageID_PARAM_AMP_FD = 19,
    MessageID_PARAM_AMP_MS = 20,
    MessageID_PARAM_AMP_MSBG = 21,
    MessageID_PARAM_AMP_VX = 22,
    MessageID_PARAM_AMP_BGN = 23,
    MessageID_PARAM_CAB_A = 24,
    MessageID_PARAM_CAB_B = 25,
    MessageID_PARAM_CAB_C = 26,
    MessageID_PARAM_CAB_D = 27,
    MessageID_PARAM_CAB_E = 28,
    MessageID_PARAM_MOD_CHORUS = 29,
    MessageID_PARAM_MOD_TREMOLO = 30,
    MessageID_PARAM_MOD_PHASER = 31,
    MessageID_PARAM_MOD_VIBRATO = 32,
    MessageID_PARAM_DELAY_DELAY = 33,
    MessageID_PARAM_REVERB = 34,
    MessageID_CATEGORY_DATA = 35,
    MessageID_BANK_DATA = 36,
    MessageID_KNOB_MATCHING = 37,
    MessageID_INIT_KNOB_MATCHING1 = 38,
    MessageID_INIT_KNOB_MATCHING2 = 39,
    MessageID_INIT_KNOB_MATCHING3 = 40,
    MessageID_KNOB_MATCHING_ALL = 41,
    MessageID_CLEAR_EFFECTS = 42,
    MessageID_SINGLE_PARAM = 43,
    MessageID_DIAG_REQ = 44,
    MessageID_DIAG_RESP_POC = 45,
    MessageID_DIAG_RESP_FIRST_PARING = 46,
    MessageID_DIAG_RESP_ERR_CODE = 47,
    MessageID_BULK_IR_START_REQ = 48,
    MessageID_BULK_IR_REQ = 49,
    MessageID_BULK_IR_END_REQ = 50,
    MessageID_BULK_IR_RES = 51,
    MessageID_REQ_DISCONNECT = 52,
    MessageID_REQ_GUITAR_NAME = 53,
    MessageID_RES_GUITAR_NAME = 54,
    MessageID_REQ_PLAY_PAIRING_SOUND = 55,
    MessageID_REQ_BOOTLOAD_MODE = 56,
    MessageID_REQ_IS_BOOTLOAD_MODE = 57,
    MessageID_RES_IS_BOOTLOAD_MODE = 58,
    MessageID_PARAM_AMP_CLEAN = 59,
    MessageID_BANK_DATA_WITH_KNOB_NUMBER = 60
} MessageID;

typedef enum _CATEGORY_NUMBER {
    CATEGORY_NUMBER_CAT_NO1_GATE = 0,
    CATEGORY_NUMBER_CAT_NO2_EFX = 1,
    CATEGORY_NUMBER_CAT_NO3_AMP = 2,
    CATEGORY_NUMBER_CAT_NO4_CAB = 3,
    CATEGORY_NUMBER_CAT_NO5_MOD = 4,
    CATEGORY_NUMBER_CAT_NO6_DELAY = 5,
    CATEGORY_NUMBER_CAT_NO7_REVERB = 6
} CATEGORY_NUMBER;

typedef enum _CATEGORY1_GATE_SELECT {
    CATEGORY1_GATE_SELECT_GATE_GATE = 0,
    CATEGORY1_GATE_SELECT_NUMBER_OF_GATE = 1
} CATEGORY1_GATE_SELECT;

typedef enum _CATEGORY2_EFX_SELECT {
    CATEGORY2_EFX_SELECT_EFX_TS90 = 0,
    CATEGORY2_EFX_SELECT_EFX_SD10 = 1,
    CATEGORY2_EFX_SELECT_EFX_RAT = 2,
    CATEGORY2_EFX_SELECT_EFX_DISTORTION = 4,
    CATEGORY2_EFX_SELECT_EFX_AUTOWAH = 5,
    CATEGORY2_EFX_SELECT_EFX_ACOUSTIC = 6,
    CATEGORY2_EFX_SELECT_NUMBER_OF_EFX = 7
} CATEGORY2_EFX_SELECT;

typedef enum _CATEGORY3_AMP_SELECT {
    CATEGORY3_AMP_SELECT_AMP_FD = 0,
    CATEGORY3_AMP_SELECT_AMP_MS = 1,
    CATEGORY3_AMP_SELECT_AMP_MSBG = 2,
    CATEGORY3_AMP_SELECT_AMP_VX = 3,
    CATEGORY3_AMP_SELECT_AMP_BGN = 4,
    CATEGORY3_AMP_SELECT_NUMBER_OF_AMP = 5
} CATEGORY3_AMP_SELECT;

typedef enum _CATEGORY4_CAB_SELECT {
    CATEGORY4_CAB_SELECT_CAB_A = 0,
    CATEGORY4_CAB_SELECT_CAB_B = 1,
    CATEGORY4_CAB_SELECT_CAB_C = 2,
    CATEGORY4_CAB_SELECT_CAB_D = 3,
    CATEGORY4_CAB_SELECT_CAB_E = 4,
    CATEGORY4_CAB_SELECT_NUMBER_OF_CAB = 5
} CATEGORY4_CAB_SELECT;

typedef enum _CATEGORY5_MOD_SELECT {
    CATEGORY5_MOD_SELECT_MOD_CHORUS = 0,
    CATEGORY5_MOD_SELECT_MOD_TREMOLO = 1,
    CATEGORY5_MOD_SELECT_MOD_PHASER = 2,
    CATEGORY5_MOD_SELECT_MOD_VIBRATO = 3,
    CATEGORY5_MOD_SELECT_NUMBER_OF_MOD = 4
} CATEGORY5_MOD_SELECT;

typedef enum _CATEGORY6_DELAY_SELECT {
    CATEGORY6_DELAY_SELECT_DELAY_DELAY = 0,
    CATEGORY6_DELAY_SELECT_NUMBER_OF_DELAY = 1
} CATEGORY6_DELAY_SELECT;

typedef enum _CATEGORY7_REVERB_SELECT {
    CATEGORY7_REVERB_SELECT_REVERB_REVERB = 0,
    CATEGORY7_REVERB_SELECT_NUMBER_OF_REVERB = 1
} CATEGORY7_REVERB_SELECT;

/* App -> Guitar */
typedef enum _DiagCode {
    DiagCode_POWER_ON_COUNT = 0,
    DiagCode_FIRST_PAIRING = 1,
    DiagCode_ERROR_CODE = 2
} DiagCode;

typedef enum _Nack_ERROR_CODE {
    Nack_ERROR_CODE_INVALID_MESSAGE_ID = 0,
    Nack_ERROR_CODE_INVALID_MESSAGE_DATA = 1,
    Nack_ERROR_CODE_INVALID_STATE = 2,
    Nack_ERROR_CODE_INVALID_OPCODE = 3,
    Nack_ERROR_CODE_INVALID_PACKET_LENGTH = 4,
    Nack_ERROR_CODE_PROTOBUF_DECODE_ERROR = 5,
    Nack_ERROR_CODE_TIMEOUT = 6
} Nack_ERROR_CODE;

typedef enum _DiagRespErrCode_ErrorCode {
    DiagRespErrCode_ErrorCode_DIAG_ERR_UNKNOWN_DIAG_ID = 0,
    DiagRespErrCode_ErrorCode_DIAG_ERR_INVALID_DIAG_DATA = 1
} DiagRespErrCode_ErrorCode;

/* Struct definitions */
typedef struct _Ack {
    int32_t receivedMessageLength;
    int32_t receivedMessageId;
} Ack;

typedef struct _Nack {
    int32_t receivedMessageLength;
    int32_t receivedMessageId;
    Nack_ERROR_CODE errorCode;
} Nack;

typedef struct _InitFromApp {
    char appVersion[64];
    int32_t KnobClicked;
    bool playPairingSound;
} InitFromApp;

/* guitar model name mapping
 "1r": "TR1 Pop Red"
 "1g": "TR1 Forest Green"
 "1i": "TR1 Creamy Ivory"
 "1b": "TR1 Jet Black" */
typedef struct _InitFromGuitar {
    int32_t receivedMessageLength; /* not used */
    int32_t receivedMessageId; /* not used */
    char guitarName[64];
    char guitarModelName[64];
    char firmwareVersion[64];
    int32_t batteryLevel;
    bool isCharging;
} InitFromGuitar;

typedef struct _ReqInitFromGuitar {
    bool request;
} ReqInitFromGuitar;

typedef struct _ChangeGuitarName {
    char guitarName[64];
} ChangeGuitarName;

typedef struct _TunerOnOff {
    bool isOn;
} TunerOnOff;

typedef struct _TunerFrequency {
    float tunerFrequency;
} TunerFrequency;

/* Knob number 0 is clear */
typedef struct _KnobClicked {
    int32_t knobNumber;
} KnobClicked;

typedef struct _KnobMatchingStart {
    int32_t knobNumber;
} KnobMatchingStart;

typedef struct _BatteryLevel {
    int32_t batteryLevel;
    bool isCharging;
} BatteryLevel;

typedef struct _ParamGate {
    bool isOn;
    int32_t noiseGateThreshold;
    int32_t noiseGateOpeningTime;
    int32_t noiseGateClosingTime;
    int32_t noiseGateHoldTime;
    int32_t compressorThreshold;
    int32_t compressorAttack;
    int32_t compressorRelease;
    int32_t compressorGain;
    int32_t compressorRatio;
    int32_t compressorHysteresis;
} ParamGate;

typedef struct _ParamEfxTs90 {
    bool isOn;
    int32_t level;
    int32_t gain;
    int32_t tone;
} ParamEfxTs90;

typedef struct _ParamEfxSd10 {
    bool isOn;
    int32_t level;
    int32_t gain;
    int32_t tone;
} ParamEfxSd10;

typedef struct _ParamEfxRat {
    bool isOn;
    int32_t level;
    int32_t gain;
    int32_t tone;
} ParamEfxRat;

typedef struct _ParamEfxDistortion {
    bool isOn;
    int32_t level;
    int32_t gain;
    int32_t tone;
} ParamEfxDistortion;

typedef struct _ParamEfxAutowah {
    bool isOn;
    int32_t level;
} ParamEfxAutowah;

typedef struct _ParamEfxAcoustic {
    bool isOn;
    int32_t level;
    int32_t bass;
    int32_t middle;
    int32_t treble;
} ParamEfxAcoustic;

typedef struct _ParamAmpFd {
    bool isOn;
    int32_t level;
    int32_t gain;
    int32_t bass;
    int32_t middle;
    int32_t treble;
} ParamAmpFd;

typedef struct _ParamAmpMs {
    bool isOn;
    int32_t level;
    int32_t gain;
    int32_t bass;
    int32_t middle;
    int32_t treble;
} ParamAmpMs;

typedef struct _ParamAmpMsbg {
    bool isOn;
    int32_t level;
    int32_t gain;
    int32_t bass;
    int32_t middle;
    int32_t treble;
} ParamAmpMsbg;

typedef struct _ParamAmpVx {
    bool isOn;
    int32_t level;
    int32_t gain;
    int32_t bass;
    int32_t middle;
    int32_t treble;
} ParamAmpVx;

typedef struct _ParamAmpBgn {
    bool isOn;
    int32_t level;
    int32_t gain;
    int32_t bass;
    int32_t middle;
    int32_t treble;
} ParamAmpBgn;

typedef struct _ParamCabA {
    bool isOn;
} ParamCabA;

typedef struct _ParamCabB {
    bool isOn;
} ParamCabB;

typedef struct _ParamCabC {
    bool isOn;
} ParamCabC;

typedef struct _ParamCabD {
    bool isOn;
} ParamCabD;

typedef struct _ParamCabE {
    bool isOn;
} ParamCabE;

typedef struct _ParamModChorus {
    bool isOn;
    int32_t depth;
    int32_t rate;
} ParamModChorus;

typedef struct _ParamModTremolo {
    bool isOn;
    int32_t depth;
    int32_t rate;
} ParamModTremolo;

typedef struct _ParamModPhaser {
    bool isOn;
    int32_t depth;
    int32_t rate;
} ParamModPhaser;

typedef struct _ParamModVibrato {
    bool isOn;
    int32_t depth;
    int32_t rate;
} ParamModVibrato;

typedef struct _ParamDelayDelay {
    bool isOn;
    int32_t time;
    int32_t level;
    int32_t feedback;
} ParamDelayDelay;

typedef struct _ParamReverb {
    bool isOn;
    int32_t predelay;
    int32_t decay;
    int32_t mix;
} ParamReverb;

typedef struct _CategoryData {
    bool isOn;
    int32_t categoryNumber;
    int32_t select;
    pb_size_t params_count;
    int32_t params[16];
} CategoryData;

typedef struct _BankData {
    pb_size_t categoryData_count;
    CategoryData categoryData[16];
} BankData;

typedef struct _KnobMatching {
    int32_t knobNumber;
    bool has_bankData;
    BankData bankData;
} KnobMatching;

typedef struct _InitKnobMatching1 {
    bool has_bankData;
    BankData bankData;
} InitKnobMatching1;

typedef struct _InitKnobMatching2 {
    bool has_bankData;
    BankData bankData;
} InitKnobMatching2;

typedef struct _InitKnobMatching3 {
    bool has_bankData;
    BankData bankData;
} InitKnobMatching3;

/* message length is too long to send at once */
typedef struct _KnobMatchingAll {
    pb_size_t knobMatchingData_count;
    KnobMatching knobMatchingData[3];
} KnobMatchingAll;

typedef struct _ClearEffects {
    bool clear;
} ClearEffects;

typedef struct _SingleParam {
    int32_t categoryIndex;
    int32_t selectIndex;
    int32_t parameterIndex;
    int32_t value;
} SingleParam;

typedef struct _DiagReq {
    DiagCode code;
} DiagReq;

typedef struct _DiagRespPOC {
    int32_t powerOnCount;
} DiagRespPOC;

typedef struct _DiagRespFirstParing {
    int64_t FirstParingTimeEpoch;
} DiagRespFirstParing;

typedef struct _DiagRespErrCode {
    int32_t errCode;
} DiagRespErrCode;

/* Save IR Request */
typedef struct _BulkIrStartReq {
    char irName[64];
    int32_t sequenceNumber;
    pb_size_t data_count;
    float data[10];
} BulkIrStartReq;

typedef struct _BulkIrReq {
    int32_t sequenceNumber;
    pb_size_t data_count;
    float data[10];
} BulkIrReq;

typedef struct _BulkIrEndReq {
    int32_t sequenceNumber;
    pb_size_t data_count;
    float data[10];
} BulkIrEndReq;

/* Save IR Response */
typedef struct _BulkIrRes {
    int32_t sequenceNumber;
    bool done;
} BulkIrRes;

typedef struct _ReqDisconnect {
    bool forgetMe;
} ReqDisconnect;

typedef struct _ReqGuitarName {
    bool request;
} ReqGuitarName;

typedef struct _ResGuitarName {
    char guitarName[64];
} ResGuitarName;

typedef struct _ReqPlayPairingSound {
    bool request;
} ReqPlayPairingSound;

typedef struct _ReqBootloadMode {
    bool request;
} ReqBootloadMode;

typedef struct _ReqIsBootloadMode {
    bool request;
} ReqIsBootloadMode;

typedef struct _ResIsBootloadMode {
    bool isBootloadMode;
} ResIsBootloadMode;

typedef struct _ParamAmpClean {
    bool isOn;
    int32_t level;
    int32_t gain;
    int32_t bass;
    int32_t middle;
    int32_t treble;
} ParamAmpClean;

typedef struct _BankDataWithKnobNumber {
    bool has_bankData;
    BankData bankData;
    int32_t knobNumber;
} BankDataWithKnobNumber;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _MessageID_MIN MessageID_INVALID
#define _MessageID_MAX MessageID_BANK_DATA_WITH_KNOB_NUMBER
#define _MessageID_ARRAYSIZE ((MessageID)(MessageID_BANK_DATA_WITH_KNOB_NUMBER+1))

#define _CATEGORY_NUMBER_MIN CATEGORY_NUMBER_CAT_NO1_GATE
#define _CATEGORY_NUMBER_MAX CATEGORY_NUMBER_CAT_NO7_REVERB
#define _CATEGORY_NUMBER_ARRAYSIZE ((CATEGORY_NUMBER)(CATEGORY_NUMBER_CAT_NO7_REVERB+1))

#define _CATEGORY1_GATE_SELECT_MIN CATEGORY1_GATE_SELECT_GATE_GATE
#define _CATEGORY1_GATE_SELECT_MAX CATEGORY1_GATE_SELECT_NUMBER_OF_GATE
#define _CATEGORY1_GATE_SELECT_ARRAYSIZE ((CATEGORY1_GATE_SELECT)(CATEGORY1_GATE_SELECT_NUMBER_OF_GATE+1))

#define _CATEGORY2_EFX_SELECT_MIN CATEGORY2_EFX_SELECT_EFX_TS90
#define _CATEGORY2_EFX_SELECT_MAX CATEGORY2_EFX_SELECT_NUMBER_OF_EFX
#define _CATEGORY2_EFX_SELECT_ARRAYSIZE ((CATEGORY2_EFX_SELECT)(CATEGORY2_EFX_SELECT_NUMBER_OF_EFX+1))

#define _CATEGORY3_AMP_SELECT_MIN CATEGORY3_AMP_SELECT_AMP_FD
#define _CATEGORY3_AMP_SELECT_MAX CATEGORY3_AMP_SELECT_NUMBER_OF_AMP
#define _CATEGORY3_AMP_SELECT_ARRAYSIZE ((CATEGORY3_AMP_SELECT)(CATEGORY3_AMP_SELECT_NUMBER_OF_AMP+1))

#define _CATEGORY4_CAB_SELECT_MIN CATEGORY4_CAB_SELECT_CAB_A
#define _CATEGORY4_CAB_SELECT_MAX CATEGORY4_CAB_SELECT_NUMBER_OF_CAB
#define _CATEGORY4_CAB_SELECT_ARRAYSIZE ((CATEGORY4_CAB_SELECT)(CATEGORY4_CAB_SELECT_NUMBER_OF_CAB+1))

#define _CATEGORY5_MOD_SELECT_MIN CATEGORY5_MOD_SELECT_MOD_CHORUS
#define _CATEGORY5_MOD_SELECT_MAX CATEGORY5_MOD_SELECT_NUMBER_OF_MOD
#define _CATEGORY5_MOD_SELECT_ARRAYSIZE ((CATEGORY5_MOD_SELECT)(CATEGORY5_MOD_SELECT_NUMBER_OF_MOD+1))

#define _CATEGORY6_DELAY_SELECT_MIN CATEGORY6_DELAY_SELECT_DELAY_DELAY
#define _CATEGORY6_DELAY_SELECT_MAX CATEGORY6_DELAY_SELECT_NUMBER_OF_DELAY
#define _CATEGORY6_DELAY_SELECT_ARRAYSIZE ((CATEGORY6_DELAY_SELECT)(CATEGORY6_DELAY_SELECT_NUMBER_OF_DELAY+1))

#define _CATEGORY7_REVERB_SELECT_MIN CATEGORY7_REVERB_SELECT_REVERB_REVERB
#define _CATEGORY7_REVERB_SELECT_MAX CATEGORY7_REVERB_SELECT_NUMBER_OF_REVERB
#define _CATEGORY7_REVERB_SELECT_ARRAYSIZE ((CATEGORY7_REVERB_SELECT)(CATEGORY7_REVERB_SELECT_NUMBER_OF_REVERB+1))

#define _DiagCode_MIN DiagCode_POWER_ON_COUNT
#define _DiagCode_MAX DiagCode_ERROR_CODE
#define _DiagCode_ARRAYSIZE ((DiagCode)(DiagCode_ERROR_CODE+1))

#define _Nack_ERROR_CODE_MIN Nack_ERROR_CODE_INVALID_MESSAGE_ID
#define _Nack_ERROR_CODE_MAX Nack_ERROR_CODE_TIMEOUT
#define _Nack_ERROR_CODE_ARRAYSIZE ((Nack_ERROR_CODE)(Nack_ERROR_CODE_TIMEOUT+1))

#define _DiagRespErrCode_ErrorCode_MIN DiagRespErrCode_ErrorCode_DIAG_ERR_UNKNOWN_DIAG_ID
#define _DiagRespErrCode_ErrorCode_MAX DiagRespErrCode_ErrorCode_DIAG_ERR_INVALID_DIAG_DATA
#define _DiagRespErrCode_ErrorCode_ARRAYSIZE ((DiagRespErrCode_ErrorCode)(DiagRespErrCode_ErrorCode_DIAG_ERR_INVALID_DIAG_DATA+1))


#define Nack_errorCode_ENUMTYPE Nack_ERROR_CODE










































#define DiagReq_code_ENUMTYPE DiagCode


















/* Initializer values for message structs */
#define Ack_init_default                         {0, 0}
#define Nack_init_default                        {0, 0, _Nack_ERROR_CODE_MIN}
#define InitFromApp_init_default                 {"", 0, 0}
#define InitFromGuitar_init_default              {0, 0, "", "", "", 0, 0}
#define ReqInitFromGuitar_init_default           {0}
#define ChangeGuitarName_init_default            {""}
#define TunerOnOff_init_default                  {0}
#define TunerFrequency_init_default              {0}
#define KnobClicked_init_default                 {0}
#define KnobMatchingStart_init_default           {0}
#define BatteryLevel_init_default                {0, 0}
#define ParamGate_init_default                   {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define ParamEfxTs90_init_default                {0, 0, 0, 0}
#define ParamEfxSd10_init_default                {0, 0, 0, 0}
#define ParamEfxRat_init_default                 {0, 0, 0, 0}
#define ParamEfxDistortion_init_default          {0, 0, 0, 0}
#define ParamEfxAutowah_init_default             {0, 0}
#define ParamEfxAcoustic_init_default            {0, 0, 0, 0, 0}
#define ParamAmpFd_init_default                  {0, 0, 0, 0, 0, 0}
#define ParamAmpMs_init_default                  {0, 0, 0, 0, 0, 0}
#define ParamAmpMsbg_init_default                {0, 0, 0, 0, 0, 0}
#define ParamAmpVx_init_default                  {0, 0, 0, 0, 0, 0}
#define ParamAmpBgn_init_default                 {0, 0, 0, 0, 0, 0}
#define ParamCabA_init_default                   {0}
#define ParamCabB_init_default                   {0}
#define ParamCabC_init_default                   {0}
#define ParamCabD_init_default                   {0}
#define ParamCabE_init_default                   {0}
#define ParamModChorus_init_default              {0, 0, 0}
#define ParamModTremolo_init_default             {0, 0, 0}
#define ParamModPhaser_init_default              {0, 0, 0}
#define ParamModVibrato_init_default             {0, 0, 0}
#define ParamDelayDelay_init_default             {0, 0, 0, 0}
#define ParamReverb_init_default                 {0, 0, 0, 0}
#define CategoryData_init_default                {0, 0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define BankData_init_default                    {0, {CategoryData_init_default, CategoryData_init_default, CategoryData_init_default, CategoryData_init_default, CategoryData_init_default, CategoryData_init_default, CategoryData_init_default, CategoryData_init_default, CategoryData_init_default, CategoryData_init_default, CategoryData_init_default, CategoryData_init_default, CategoryData_init_default, CategoryData_init_default, CategoryData_init_default, CategoryData_init_default}}
#define KnobMatching_init_default                {0, false, BankData_init_default}
#define InitKnobMatching1_init_default           {false, BankData_init_default}
#define InitKnobMatching2_init_default           {false, BankData_init_default}
#define InitKnobMatching3_init_default           {false, BankData_init_default}
#define KnobMatchingAll_init_default             {0, {KnobMatching_init_default, KnobMatching_init_default, KnobMatching_init_default}}
#define ClearEffects_init_default                {0}
#define SingleParam_init_default                 {0, 0, 0, 0}
#define DiagReq_init_default                     {_DiagCode_MIN}
#define DiagRespPOC_init_default                 {0}
#define DiagRespFirstParing_init_default         {0}
#define DiagRespErrCode_init_default             {0}
#define BulkIrStartReq_init_default              {"", 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define BulkIrReq_init_default                   {0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define BulkIrEndReq_init_default                {0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define BulkIrRes_init_default                   {0, 0}
#define ReqDisconnect_init_default               {0}
#define ReqGuitarName_init_default               {0}
#define ResGuitarName_init_default               {""}
#define ReqPlayPairingSound_init_default         {0}
#define ReqBootloadMode_init_default             {0}
#define ReqIsBootloadMode_init_default           {0}
#define ResIsBootloadMode_init_default           {0}
#define ParamAmpClean_init_default               {0, 0, 0, 0, 0, 0}
#define BankDataWithKnobNumber_init_default      {false, BankData_init_default, 0}
#define Ack_init_zero                            {0, 0}
#define Nack_init_zero                           {0, 0, _Nack_ERROR_CODE_MIN}
#define InitFromApp_init_zero                    {"", 0, 0}
#define InitFromGuitar_init_zero                 {0, 0, "", "", "", 0, 0}
#define ReqInitFromGuitar_init_zero              {0}
#define ChangeGuitarName_init_zero               {""}
#define TunerOnOff_init_zero                     {0}
#define TunerFrequency_init_zero                 {0}
#define KnobClicked_init_zero                    {0}
#define KnobMatchingStart_init_zero              {0}
#define BatteryLevel_init_zero                   {0, 0}
#define ParamGate_init_zero                      {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define ParamEfxTs90_init_zero                   {0, 0, 0, 0}
#define ParamEfxSd10_init_zero                   {0, 0, 0, 0}
#define ParamEfxRat_init_zero                    {0, 0, 0, 0}
#define ParamEfxDistortion_init_zero             {0, 0, 0, 0}
#define ParamEfxAutowah_init_zero                {0, 0}
#define ParamEfxAcoustic_init_zero               {0, 0, 0, 0, 0}
#define ParamAmpFd_init_zero                     {0, 0, 0, 0, 0, 0}
#define ParamAmpMs_init_zero                     {0, 0, 0, 0, 0, 0}
#define ParamAmpMsbg_init_zero                   {0, 0, 0, 0, 0, 0}
#define ParamAmpVx_init_zero                     {0, 0, 0, 0, 0, 0}
#define ParamAmpBgn_init_zero                    {0, 0, 0, 0, 0, 0}
#define ParamCabA_init_zero                      {0}
#define ParamCabB_init_zero                      {0}
#define ParamCabC_init_zero                      {0}
#define ParamCabD_init_zero                      {0}
#define ParamCabE_init_zero                      {0}
#define ParamModChorus_init_zero                 {0, 0, 0}
#define ParamModTremolo_init_zero                {0, 0, 0}
#define ParamModPhaser_init_zero                 {0, 0, 0}
#define ParamModVibrato_init_zero                {0, 0, 0}
#define ParamDelayDelay_init_zero                {0, 0, 0, 0}
#define ParamReverb_init_zero                    {0, 0, 0, 0}
#define CategoryData_init_zero                   {0, 0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define BankData_init_zero                       {0, {CategoryData_init_zero, CategoryData_init_zero, CategoryData_init_zero, CategoryData_init_zero, CategoryData_init_zero, CategoryData_init_zero, CategoryData_init_zero, CategoryData_init_zero, CategoryData_init_zero, CategoryData_init_zero, CategoryData_init_zero, CategoryData_init_zero, CategoryData_init_zero, CategoryData_init_zero, CategoryData_init_zero, CategoryData_init_zero}}
#define KnobMatching_init_zero                   {0, false, BankData_init_zero}
#define InitKnobMatching1_init_zero              {false, BankData_init_zero}
#define InitKnobMatching2_init_zero              {false, BankData_init_zero}
#define InitKnobMatching3_init_zero              {false, BankData_init_zero}
#define KnobMatchingAll_init_zero                {0, {KnobMatching_init_zero, KnobMatching_init_zero, KnobMatching_init_zero}}
#define ClearEffects_init_zero                   {0}
#define SingleParam_init_zero                    {0, 0, 0, 0}
#define DiagReq_init_zero                        {_DiagCode_MIN}
#define DiagRespPOC_init_zero                    {0}
#define DiagRespFirstParing_init_zero            {0}
#define DiagRespErrCode_init_zero                {0}
#define BulkIrStartReq_init_zero                 {"", 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define BulkIrReq_init_zero                      {0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define BulkIrEndReq_init_zero                   {0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define BulkIrRes_init_zero                      {0, 0}
#define ReqDisconnect_init_zero                  {0}
#define ReqGuitarName_init_zero                  {0}
#define ResGuitarName_init_zero                  {""}
#define ReqPlayPairingSound_init_zero            {0}
#define ReqBootloadMode_init_zero                {0}
#define ReqIsBootloadMode_init_zero              {0}
#define ResIsBootloadMode_init_zero              {0}
#define ParamAmpClean_init_zero                  {0, 0, 0, 0, 0, 0}
#define BankDataWithKnobNumber_init_zero         {false, BankData_init_zero, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Ack_receivedMessageLength_tag            1
#define Ack_receivedMessageId_tag                2
#define Nack_receivedMessageLength_tag           1
#define Nack_receivedMessageId_tag               2
#define Nack_errorCode_tag                       3
#define InitFromApp_appVersion_tag               1
#define InitFromApp_KnobClicked_tag              2
#define InitFromApp_playPairingSound_tag         3
#define InitFromGuitar_receivedMessageLength_tag 1
#define InitFromGuitar_receivedMessageId_tag     2
#define InitFromGuitar_guitarName_tag            3
#define InitFromGuitar_guitarModelName_tag       4
#define InitFromGuitar_firmwareVersion_tag       5
#define InitFromGuitar_batteryLevel_tag          6
#define InitFromGuitar_isCharging_tag            7
#define ReqInitFromGuitar_request_tag            1
#define ChangeGuitarName_guitarName_tag          1
#define TunerOnOff_isOn_tag                      1
#define TunerFrequency_tunerFrequency_tag        1
#define KnobClicked_knobNumber_tag               1
#define KnobMatchingStart_knobNumber_tag         1
#define BatteryLevel_batteryLevel_tag            1
#define BatteryLevel_isCharging_tag              2
#define ParamGate_isOn_tag                       1
#define ParamGate_noiseGateThreshold_tag         2
#define ParamGate_noiseGateOpeningTime_tag       3
#define ParamGate_noiseGateClosingTime_tag       4
#define ParamGate_noiseGateHoldTime_tag          5
#define ParamGate_compressorThreshold_tag        6
#define ParamGate_compressorAttack_tag           7
#define ParamGate_compressorRelease_tag          8
#define ParamGate_compressorGain_tag             9
#define ParamGate_compressorRatio_tag            10
#define ParamGate_compressorHysteresis_tag       111
#define ParamEfxTs90_isOn_tag                    1
#define ParamEfxTs90_level_tag                   2
#define ParamEfxTs90_gain_tag                    3
#define ParamEfxTs90_tone_tag                    4
#define ParamEfxSd10_isOn_tag                    1
#define ParamEfxSd10_level_tag                   2
#define ParamEfxSd10_gain_tag                    3
#define ParamEfxSd10_tone_tag                    4
#define ParamEfxRat_isOn_tag                     1
#define ParamEfxRat_level_tag                    2
#define ParamEfxRat_gain_tag                     3
#define ParamEfxRat_tone_tag                     4
#define ParamEfxDistortion_isOn_tag              1
#define ParamEfxDistortion_level_tag             2
#define ParamEfxDistortion_gain_tag              3
#define ParamEfxDistortion_tone_tag              4
#define ParamEfxAutowah_isOn_tag                 1
#define ParamEfxAutowah_level_tag                2
#define ParamEfxAcoustic_isOn_tag                1
#define ParamEfxAcoustic_level_tag               2
#define ParamEfxAcoustic_bass_tag                3
#define ParamEfxAcoustic_middle_tag              4
#define ParamEfxAcoustic_treble_tag              5
#define ParamAmpFd_isOn_tag                      1
#define ParamAmpFd_level_tag                     2
#define ParamAmpFd_gain_tag                      3
#define ParamAmpFd_bass_tag                      4
#define ParamAmpFd_middle_tag                    5
#define ParamAmpFd_treble_tag                    6
#define ParamAmpMs_isOn_tag                      1
#define ParamAmpMs_level_tag                     2
#define ParamAmpMs_gain_tag                      3
#define ParamAmpMs_bass_tag                      4
#define ParamAmpMs_middle_tag                    5
#define ParamAmpMs_treble_tag                    6
#define ParamAmpMsbg_isOn_tag                    1
#define ParamAmpMsbg_level_tag                   2
#define ParamAmpMsbg_gain_tag                    3
#define ParamAmpMsbg_bass_tag                    4
#define ParamAmpMsbg_middle_tag                  5
#define ParamAmpMsbg_treble_tag                  6
#define ParamAmpVx_isOn_tag                      1
#define ParamAmpVx_level_tag                     2
#define ParamAmpVx_gain_tag                      3
#define ParamAmpVx_bass_tag                      4
#define ParamAmpVx_middle_tag                    5
#define ParamAmpVx_treble_tag                    6
#define ParamAmpBgn_isOn_tag                     1
#define ParamAmpBgn_level_tag                    2
#define ParamAmpBgn_gain_tag                     3
#define ParamAmpBgn_bass_tag                     4
#define ParamAmpBgn_middle_tag                   5
#define ParamAmpBgn_treble_tag                   6
#define ParamCabA_isOn_tag                       1
#define ParamCabB_isOn_tag                       1
#define ParamCabC_isOn_tag                       1
#define ParamCabD_isOn_tag                       1
#define ParamCabE_isOn_tag                       1
#define ParamModChorus_isOn_tag                  1
#define ParamModChorus_depth_tag                 2
#define ParamModChorus_rate_tag                  3
#define ParamModTremolo_isOn_tag                 1
#define ParamModTremolo_depth_tag                2
#define ParamModTremolo_rate_tag                 3
#define ParamModPhaser_isOn_tag                  1
#define ParamModPhaser_depth_tag                 2
#define ParamModPhaser_rate_tag                  3
#define ParamModVibrato_isOn_tag                 1
#define ParamModVibrato_depth_tag                2
#define ParamModVibrato_rate_tag                 3
#define ParamDelayDelay_isOn_tag                 1
#define ParamDelayDelay_time_tag                 2
#define ParamDelayDelay_level_tag                3
#define ParamDelayDelay_feedback_tag             4
#define ParamReverb_isOn_tag                     1
#define ParamReverb_predelay_tag                 2
#define ParamReverb_decay_tag                    3
#define ParamReverb_mix_tag                      4
#define CategoryData_isOn_tag                    1
#define CategoryData_categoryNumber_tag          2
#define CategoryData_select_tag                  3
#define CategoryData_params_tag                  4
#define BankData_categoryData_tag                1
#define KnobMatching_knobNumber_tag              1
#define KnobMatching_bankData_tag                2
#define InitKnobMatching1_bankData_tag           1
#define InitKnobMatching2_bankData_tag           1
#define InitKnobMatching3_bankData_tag           1
#define KnobMatchingAll_knobMatchingData_tag     1
#define ClearEffects_clear_tag                   1
#define SingleParam_categoryIndex_tag            1
#define SingleParam_selectIndex_tag              2
#define SingleParam_parameterIndex_tag           3
#define SingleParam_value_tag                    4
#define DiagReq_code_tag                         1
#define DiagRespPOC_powerOnCount_tag             1
#define DiagRespFirstParing_FirstParingTimeEpoch_tag 1
#define DiagRespErrCode_errCode_tag              1
#define BulkIrStartReq_irName_tag                1
#define BulkIrStartReq_sequenceNumber_tag        2
#define BulkIrStartReq_data_tag                  3
#define BulkIrReq_sequenceNumber_tag             1
#define BulkIrReq_data_tag                       2
#define BulkIrEndReq_sequenceNumber_tag          1
#define BulkIrEndReq_data_tag                    2
#define BulkIrRes_sequenceNumber_tag             1
#define BulkIrRes_done_tag                       2
#define ReqDisconnect_forgetMe_tag               1
#define ReqGuitarName_request_tag                1
#define ResGuitarName_guitarName_tag             1
#define ReqPlayPairingSound_request_tag          1
#define ReqBootloadMode_request_tag              1
#define ReqIsBootloadMode_request_tag            1
#define ResIsBootloadMode_isBootloadMode_tag     1
#define ParamAmpClean_isOn_tag                   1
#define ParamAmpClean_level_tag                  2
#define ParamAmpClean_gain_tag                   3
#define ParamAmpClean_bass_tag                   4
#define ParamAmpClean_middle_tag                 5
#define ParamAmpClean_treble_tag                 6
#define BankDataWithKnobNumber_bankData_tag      1
#define BankDataWithKnobNumber_knobNumber_tag    2

/* Struct field encoding specification for nanopb */
#define Ack_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    receivedMessageLength,   1) \
X(a, STATIC,   SINGULAR, INT32,    receivedMessageId,   2)
#define Ack_CALLBACK NULL
#define Ack_DEFAULT NULL

#define Nack_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    receivedMessageLength,   1) \
X(a, STATIC,   SINGULAR, INT32,    receivedMessageId,   2) \
X(a, STATIC,   SINGULAR, UENUM,    errorCode,         3)
#define Nack_CALLBACK NULL
#define Nack_DEFAULT NULL

#define InitFromApp_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   appVersion,        1) \
X(a, STATIC,   SINGULAR, INT32,    KnobClicked,       2) \
X(a, STATIC,   SINGULAR, BOOL,     playPairingSound,   3)
#define InitFromApp_CALLBACK NULL
#define InitFromApp_DEFAULT NULL

#define InitFromGuitar_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    receivedMessageLength,   1) \
X(a, STATIC,   SINGULAR, INT32,    receivedMessageId,   2) \
X(a, STATIC,   SINGULAR, STRING,   guitarName,        3) \
X(a, STATIC,   SINGULAR, STRING,   guitarModelName,   4) \
X(a, STATIC,   SINGULAR, STRING,   firmwareVersion,   5) \
X(a, STATIC,   SINGULAR, INT32,    batteryLevel,      6) \
X(a, STATIC,   SINGULAR, BOOL,     isCharging,        7)
#define InitFromGuitar_CALLBACK NULL
#define InitFromGuitar_DEFAULT NULL

#define ReqInitFromGuitar_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     request,           1)
#define ReqInitFromGuitar_CALLBACK NULL
#define ReqInitFromGuitar_DEFAULT NULL

#define ChangeGuitarName_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   guitarName,        1)
#define ChangeGuitarName_CALLBACK NULL
#define ChangeGuitarName_DEFAULT NULL

#define TunerOnOff_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              1)
#define TunerOnOff_CALLBACK NULL
#define TunerOnOff_DEFAULT NULL

#define TunerFrequency_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    tunerFrequency,    1)
#define TunerFrequency_CALLBACK NULL
#define TunerFrequency_DEFAULT NULL

#define KnobClicked_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    knobNumber,        1)
#define KnobClicked_CALLBACK NULL
#define KnobClicked_DEFAULT NULL

#define KnobMatchingStart_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    knobNumber,        1)
#define KnobMatchingStart_CALLBACK NULL
#define KnobMatchingStart_DEFAULT NULL

#define BatteryLevel_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    batteryLevel,      1) \
X(a, STATIC,   SINGULAR, BOOL,     isCharging,        2)
#define BatteryLevel_CALLBACK NULL
#define BatteryLevel_DEFAULT NULL

#define ParamGate_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              1) \
X(a, STATIC,   SINGULAR, INT32,    noiseGateThreshold,   2) \
X(a, STATIC,   SINGULAR, INT32,    noiseGateOpeningTime,   3) \
X(a, STATIC,   SINGULAR, INT32,    noiseGateClosingTime,   4) \
X(a, STATIC,   SINGULAR, INT32,    noiseGateHoldTime,   5) \
X(a, STATIC,   SINGULAR, INT32,    compressorThreshold,   6) \
X(a, STATIC,   SINGULAR, INT32,    compressorAttack,   7) \
X(a, STATIC,   SINGULAR, INT32,    compressorRelease,   8) \
X(a, STATIC,   SINGULAR, INT32,    compressorGain,    9) \
X(a, STATIC,   SINGULAR, INT32,    compressorRatio,  10) \
X(a, STATIC,   SINGULAR, INT32,    compressorHysteresis, 111)
#define ParamGate_CALLBACK NULL
#define ParamGate_DEFAULT NULL

#define ParamEfxTs90_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              1) \
X(a, STATIC,   SINGULAR, INT32,    level,             2) \
X(a, STATIC,   SINGULAR, INT32,    gain,              3) \
X(a, STATIC,   SINGULAR, INT32,    tone,              4)
#define ParamEfxTs90_CALLBACK NULL
#define ParamEfxTs90_DEFAULT NULL

#define ParamEfxSd10_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              1) \
X(a, STATIC,   SINGULAR, INT32,    level,             2) \
X(a, STATIC,   SINGULAR, INT32,    gain,              3) \
X(a, STATIC,   SINGULAR, INT32,    tone,              4)
#define ParamEfxSd10_CALLBACK NULL
#define ParamEfxSd10_DEFAULT NULL

#define ParamEfxRat_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              1) \
X(a, STATIC,   SINGULAR, INT32,    level,             2) \
X(a, STATIC,   SINGULAR, INT32,    gain,              3) \
X(a, STATIC,   SINGULAR, INT32,    tone,              4)
#define ParamEfxRat_CALLBACK NULL
#define ParamEfxRat_DEFAULT NULL

#define ParamEfxDistortion_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              1) \
X(a, STATIC,   SINGULAR, INT32,    level,             2) \
X(a, STATIC,   SINGULAR, INT32,    gain,              3) \
X(a, STATIC,   SINGULAR, INT32,    tone,              4)
#define ParamEfxDistortion_CALLBACK NULL
#define ParamEfxDistortion_DEFAULT NULL

#define ParamEfxAutowah_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              1) \
X(a, STATIC,   SINGULAR, INT32,    level,             2)
#define ParamEfxAutowah_CALLBACK NULL
#define ParamEfxAutowah_DEFAULT NULL

#define ParamEfxAcoustic_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              1) \
X(a, STATIC,   SINGULAR, INT32,    level,             2) \
X(a, STATIC,   SINGULAR, INT32,    bass,              3) \
X(a, STATIC,   SINGULAR, INT32,    middle,            4) \
X(a, STATIC,   SINGULAR, INT32,    treble,            5)
#define ParamEfxAcoustic_CALLBACK NULL
#define ParamEfxAcoustic_DEFAULT NULL

#define ParamAmpFd_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              1) \
X(a, STATIC,   SINGULAR, INT32,    level,             2) \
X(a, STATIC,   SINGULAR, INT32,    gain,              3) \
X(a, STATIC,   SINGULAR, INT32,    bass,              4) \
X(a, STATIC,   SINGULAR, INT32,    middle,            5) \
X(a, STATIC,   SINGULAR, INT32,    treble,            6)
#define ParamAmpFd_CALLBACK NULL
#define ParamAmpFd_DEFAULT NULL

#define ParamAmpMs_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              1) \
X(a, STATIC,   SINGULAR, INT32,    level,             2) \
X(a, STATIC,   SINGULAR, INT32,    gain,              3) \
X(a, STATIC,   SINGULAR, INT32,    bass,              4) \
X(a, STATIC,   SINGULAR, INT32,    middle,            5) \
X(a, STATIC,   SINGULAR, INT32,    treble,            6)
#define ParamAmpMs_CALLBACK NULL
#define ParamAmpMs_DEFAULT NULL

#define ParamAmpMsbg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              1) \
X(a, STATIC,   SINGULAR, INT32,    level,             2) \
X(a, STATIC,   SINGULAR, INT32,    gain,              3) \
X(a, STATIC,   SINGULAR, INT32,    bass,              4) \
X(a, STATIC,   SINGULAR, INT32,    middle,            5) \
X(a, STATIC,   SINGULAR, INT32,    treble,            6)
#define ParamAmpMsbg_CALLBACK NULL
#define ParamAmpMsbg_DEFAULT NULL

#define ParamAmpVx_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              1) \
X(a, STATIC,   SINGULAR, INT32,    level,             2) \
X(a, STATIC,   SINGULAR, INT32,    gain,              3) \
X(a, STATIC,   SINGULAR, INT32,    bass,              4) \
X(a, STATIC,   SINGULAR, INT32,    middle,            5) \
X(a, STATIC,   SINGULAR, INT32,    treble,            6)
#define ParamAmpVx_CALLBACK NULL
#define ParamAmpVx_DEFAULT NULL

#define ParamAmpBgn_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              1) \
X(a, STATIC,   SINGULAR, INT32,    level,             2) \
X(a, STATIC,   SINGULAR, INT32,    gain,              3) \
X(a, STATIC,   SINGULAR, INT32,    bass,              4) \
X(a, STATIC,   SINGULAR, INT32,    middle,            5) \
X(a, STATIC,   SINGULAR, INT32,    treble,            6)
#define ParamAmpBgn_CALLBACK NULL
#define ParamAmpBgn_DEFAULT NULL

#define ParamCabA_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              1)
#define ParamCabA_CALLBACK NULL
#define ParamCabA_DEFAULT NULL

#define ParamCabB_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              1)
#define ParamCabB_CALLBACK NULL
#define ParamCabB_DEFAULT NULL

#define ParamCabC_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              1)
#define ParamCabC_CALLBACK NULL
#define ParamCabC_DEFAULT NULL

#define ParamCabD_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              1)
#define ParamCabD_CALLBACK NULL
#define ParamCabD_DEFAULT NULL

#define ParamCabE_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              1)
#define ParamCabE_CALLBACK NULL
#define ParamCabE_DEFAULT NULL

#define ParamModChorus_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              1) \
X(a, STATIC,   SINGULAR, INT32,    depth,             2) \
X(a, STATIC,   SINGULAR, INT32,    rate,              3)
#define ParamModChorus_CALLBACK NULL
#define ParamModChorus_DEFAULT NULL

#define ParamModTremolo_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              1) \
X(a, STATIC,   SINGULAR, INT32,    depth,             2) \
X(a, STATIC,   SINGULAR, INT32,    rate,              3)
#define ParamModTremolo_CALLBACK NULL
#define ParamModTremolo_DEFAULT NULL

#define ParamModPhaser_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              1) \
X(a, STATIC,   SINGULAR, INT32,    depth,             2) \
X(a, STATIC,   SINGULAR, INT32,    rate,              3)
#define ParamModPhaser_CALLBACK NULL
#define ParamModPhaser_DEFAULT NULL

#define ParamModVibrato_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              1) \
X(a, STATIC,   SINGULAR, INT32,    depth,             2) \
X(a, STATIC,   SINGULAR, INT32,    rate,              3)
#define ParamModVibrato_CALLBACK NULL
#define ParamModVibrato_DEFAULT NULL

#define ParamDelayDelay_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              1) \
X(a, STATIC,   SINGULAR, INT32,    time,              2) \
X(a, STATIC,   SINGULAR, INT32,    level,             3) \
X(a, STATIC,   SINGULAR, INT32,    feedback,          4)
#define ParamDelayDelay_CALLBACK NULL
#define ParamDelayDelay_DEFAULT NULL

#define ParamReverb_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              1) \
X(a, STATIC,   SINGULAR, INT32,    predelay,          2) \
X(a, STATIC,   SINGULAR, INT32,    decay,             3) \
X(a, STATIC,   SINGULAR, INT32,    mix,               4)
#define ParamReverb_CALLBACK NULL
#define ParamReverb_DEFAULT NULL

#define CategoryData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              1) \
X(a, STATIC,   SINGULAR, INT32,    categoryNumber,    2) \
X(a, STATIC,   SINGULAR, INT32,    select,            3) \
X(a, STATIC,   REPEATED, INT32,    params,            4)
#define CategoryData_CALLBACK NULL
#define CategoryData_DEFAULT NULL

#define BankData_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, MESSAGE,  categoryData,      1)
#define BankData_CALLBACK NULL
#define BankData_DEFAULT NULL
#define BankData_categoryData_MSGTYPE CategoryData

#define KnobMatching_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    knobNumber,        1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  bankData,          2)
#define KnobMatching_CALLBACK NULL
#define KnobMatching_DEFAULT NULL
#define KnobMatching_bankData_MSGTYPE BankData

#define InitKnobMatching1_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  bankData,          1)
#define InitKnobMatching1_CALLBACK NULL
#define InitKnobMatching1_DEFAULT NULL
#define InitKnobMatching1_bankData_MSGTYPE BankData

#define InitKnobMatching2_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  bankData,          1)
#define InitKnobMatching2_CALLBACK NULL
#define InitKnobMatching2_DEFAULT NULL
#define InitKnobMatching2_bankData_MSGTYPE BankData

#define InitKnobMatching3_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  bankData,          1)
#define InitKnobMatching3_CALLBACK NULL
#define InitKnobMatching3_DEFAULT NULL
#define InitKnobMatching3_bankData_MSGTYPE BankData

#define KnobMatchingAll_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, MESSAGE,  knobMatchingData,   1)
#define KnobMatchingAll_CALLBACK NULL
#define KnobMatchingAll_DEFAULT NULL
#define KnobMatchingAll_knobMatchingData_MSGTYPE KnobMatching

#define ClearEffects_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     clear,             1)
#define ClearEffects_CALLBACK NULL
#define ClearEffects_DEFAULT NULL

#define SingleParam_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    categoryIndex,     1) \
X(a, STATIC,   SINGULAR, INT32,    selectIndex,       2) \
X(a, STATIC,   SINGULAR, INT32,    parameterIndex,    3) \
X(a, STATIC,   SINGULAR, INT32,    value,             4)
#define SingleParam_CALLBACK NULL
#define SingleParam_DEFAULT NULL

#define DiagReq_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    code,              1)
#define DiagReq_CALLBACK NULL
#define DiagReq_DEFAULT NULL

#define DiagRespPOC_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    powerOnCount,      1)
#define DiagRespPOC_CALLBACK NULL
#define DiagRespPOC_DEFAULT NULL

#define DiagRespFirstParing_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT64,    FirstParingTimeEpoch,   1)
#define DiagRespFirstParing_CALLBACK NULL
#define DiagRespFirstParing_DEFAULT NULL

#define DiagRespErrCode_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    errCode,           1)
#define DiagRespErrCode_CALLBACK NULL
#define DiagRespErrCode_DEFAULT NULL

#define BulkIrStartReq_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   irName,            1) \
X(a, STATIC,   SINGULAR, INT32,    sequenceNumber,    2) \
X(a, STATIC,   REPEATED, FLOAT,    data,              3)
#define BulkIrStartReq_CALLBACK NULL
#define BulkIrStartReq_DEFAULT NULL

#define BulkIrReq_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    sequenceNumber,    1) \
X(a, STATIC,   REPEATED, FLOAT,    data,              2)
#define BulkIrReq_CALLBACK NULL
#define BulkIrReq_DEFAULT NULL

#define BulkIrEndReq_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    sequenceNumber,    1) \
X(a, STATIC,   REPEATED, FLOAT,    data,              2)
#define BulkIrEndReq_CALLBACK NULL
#define BulkIrEndReq_DEFAULT NULL

#define BulkIrRes_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    sequenceNumber,    1) \
X(a, STATIC,   SINGULAR, BOOL,     done,              2)
#define BulkIrRes_CALLBACK NULL
#define BulkIrRes_DEFAULT NULL

#define ReqDisconnect_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     forgetMe,          1)
#define ReqDisconnect_CALLBACK NULL
#define ReqDisconnect_DEFAULT NULL

#define ReqGuitarName_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     request,           1)
#define ReqGuitarName_CALLBACK NULL
#define ReqGuitarName_DEFAULT NULL

#define ResGuitarName_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   guitarName,        1)
#define ResGuitarName_CALLBACK NULL
#define ResGuitarName_DEFAULT NULL

#define ReqPlayPairingSound_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     request,           1)
#define ReqPlayPairingSound_CALLBACK NULL
#define ReqPlayPairingSound_DEFAULT NULL

#define ReqBootloadMode_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     request,           1)
#define ReqBootloadMode_CALLBACK NULL
#define ReqBootloadMode_DEFAULT NULL

#define ReqIsBootloadMode_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     request,           1)
#define ReqIsBootloadMode_CALLBACK NULL
#define ReqIsBootloadMode_DEFAULT NULL

#define ResIsBootloadMode_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     isBootloadMode,    1)
#define ResIsBootloadMode_CALLBACK NULL
#define ResIsBootloadMode_DEFAULT NULL

#define ParamAmpClean_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     isOn,              1) \
X(a, STATIC,   SINGULAR, INT32,    level,             2) \
X(a, STATIC,   SINGULAR, INT32,    gain,              3) \
X(a, STATIC,   SINGULAR, INT32,    bass,              4) \
X(a, STATIC,   SINGULAR, INT32,    middle,            5) \
X(a, STATIC,   SINGULAR, INT32,    treble,            6)
#define ParamAmpClean_CALLBACK NULL
#define ParamAmpClean_DEFAULT NULL

#define BankDataWithKnobNumber_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  bankData,          1) \
X(a, STATIC,   SINGULAR, INT32,    knobNumber,        2)
#define BankDataWithKnobNumber_CALLBACK NULL
#define BankDataWithKnobNumber_DEFAULT NULL
#define BankDataWithKnobNumber_bankData_MSGTYPE BankData

extern const pb_msgdesc_t Ack_msg;
extern const pb_msgdesc_t Nack_msg;
extern const pb_msgdesc_t InitFromApp_msg;
extern const pb_msgdesc_t InitFromGuitar_msg;
extern const pb_msgdesc_t ReqInitFromGuitar_msg;
extern const pb_msgdesc_t ChangeGuitarName_msg;
extern const pb_msgdesc_t TunerOnOff_msg;
extern const pb_msgdesc_t TunerFrequency_msg;
extern const pb_msgdesc_t KnobClicked_msg;
extern const pb_msgdesc_t KnobMatchingStart_msg;
extern const pb_msgdesc_t BatteryLevel_msg;
extern const pb_msgdesc_t ParamGate_msg;
extern const pb_msgdesc_t ParamEfxTs90_msg;
extern const pb_msgdesc_t ParamEfxSd10_msg;
extern const pb_msgdesc_t ParamEfxRat_msg;
extern const pb_msgdesc_t ParamEfxDistortion_msg;
extern const pb_msgdesc_t ParamEfxAutowah_msg;
extern const pb_msgdesc_t ParamEfxAcoustic_msg;
extern const pb_msgdesc_t ParamAmpFd_msg;
extern const pb_msgdesc_t ParamAmpMs_msg;
extern const pb_msgdesc_t ParamAmpMsbg_msg;
extern const pb_msgdesc_t ParamAmpVx_msg;
extern const pb_msgdesc_t ParamAmpBgn_msg;
extern const pb_msgdesc_t ParamCabA_msg;
extern const pb_msgdesc_t ParamCabB_msg;
extern const pb_msgdesc_t ParamCabC_msg;
extern const pb_msgdesc_t ParamCabD_msg;
extern const pb_msgdesc_t ParamCabE_msg;
extern const pb_msgdesc_t ParamModChorus_msg;
extern const pb_msgdesc_t ParamModTremolo_msg;
extern const pb_msgdesc_t ParamModPhaser_msg;
extern const pb_msgdesc_t ParamModVibrato_msg;
extern const pb_msgdesc_t ParamDelayDelay_msg;
extern const pb_msgdesc_t ParamReverb_msg;
extern const pb_msgdesc_t CategoryData_msg;
extern const pb_msgdesc_t BankData_msg;
extern const pb_msgdesc_t KnobMatching_msg;
extern const pb_msgdesc_t InitKnobMatching1_msg;
extern const pb_msgdesc_t InitKnobMatching2_msg;
extern const pb_msgdesc_t InitKnobMatching3_msg;
extern const pb_msgdesc_t KnobMatchingAll_msg;
extern const pb_msgdesc_t ClearEffects_msg;
extern const pb_msgdesc_t SingleParam_msg;
extern const pb_msgdesc_t DiagReq_msg;
extern const pb_msgdesc_t DiagRespPOC_msg;
extern const pb_msgdesc_t DiagRespFirstParing_msg;
extern const pb_msgdesc_t DiagRespErrCode_msg;
extern const pb_msgdesc_t BulkIrStartReq_msg;
extern const pb_msgdesc_t BulkIrReq_msg;
extern const pb_msgdesc_t BulkIrEndReq_msg;
extern const pb_msgdesc_t BulkIrRes_msg;
extern const pb_msgdesc_t ReqDisconnect_msg;
extern const pb_msgdesc_t ReqGuitarName_msg;
extern const pb_msgdesc_t ResGuitarName_msg;
extern const pb_msgdesc_t ReqPlayPairingSound_msg;
extern const pb_msgdesc_t ReqBootloadMode_msg;
extern const pb_msgdesc_t ReqIsBootloadMode_msg;
extern const pb_msgdesc_t ResIsBootloadMode_msg;
extern const pb_msgdesc_t ParamAmpClean_msg;
extern const pb_msgdesc_t BankDataWithKnobNumber_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Ack_fields &Ack_msg
#define Nack_fields &Nack_msg
#define InitFromApp_fields &InitFromApp_msg
#define InitFromGuitar_fields &InitFromGuitar_msg
#define ReqInitFromGuitar_fields &ReqInitFromGuitar_msg
#define ChangeGuitarName_fields &ChangeGuitarName_msg
#define TunerOnOff_fields &TunerOnOff_msg
#define TunerFrequency_fields &TunerFrequency_msg
#define KnobClicked_fields &KnobClicked_msg
#define KnobMatchingStart_fields &KnobMatchingStart_msg
#define BatteryLevel_fields &BatteryLevel_msg
#define ParamGate_fields &ParamGate_msg
#define ParamEfxTs90_fields &ParamEfxTs90_msg
#define ParamEfxSd10_fields &ParamEfxSd10_msg
#define ParamEfxRat_fields &ParamEfxRat_msg
#define ParamEfxDistortion_fields &ParamEfxDistortion_msg
#define ParamEfxAutowah_fields &ParamEfxAutowah_msg
#define ParamEfxAcoustic_fields &ParamEfxAcoustic_msg
#define ParamAmpFd_fields &ParamAmpFd_msg
#define ParamAmpMs_fields &ParamAmpMs_msg
#define ParamAmpMsbg_fields &ParamAmpMsbg_msg
#define ParamAmpVx_fields &ParamAmpVx_msg
#define ParamAmpBgn_fields &ParamAmpBgn_msg
#define ParamCabA_fields &ParamCabA_msg
#define ParamCabB_fields &ParamCabB_msg
#define ParamCabC_fields &ParamCabC_msg
#define ParamCabD_fields &ParamCabD_msg
#define ParamCabE_fields &ParamCabE_msg
#define ParamModChorus_fields &ParamModChorus_msg
#define ParamModTremolo_fields &ParamModTremolo_msg
#define ParamModPhaser_fields &ParamModPhaser_msg
#define ParamModVibrato_fields &ParamModVibrato_msg
#define ParamDelayDelay_fields &ParamDelayDelay_msg
#define ParamReverb_fields &ParamReverb_msg
#define CategoryData_fields &CategoryData_msg
#define BankData_fields &BankData_msg
#define KnobMatching_fields &KnobMatching_msg
#define InitKnobMatching1_fields &InitKnobMatching1_msg
#define InitKnobMatching2_fields &InitKnobMatching2_msg
#define InitKnobMatching3_fields &InitKnobMatching3_msg
#define KnobMatchingAll_fields &KnobMatchingAll_msg
#define ClearEffects_fields &ClearEffects_msg
#define SingleParam_fields &SingleParam_msg
#define DiagReq_fields &DiagReq_msg
#define DiagRespPOC_fields &DiagRespPOC_msg
#define DiagRespFirstParing_fields &DiagRespFirstParing_msg
#define DiagRespErrCode_fields &DiagRespErrCode_msg
#define BulkIrStartReq_fields &BulkIrStartReq_msg
#define BulkIrReq_fields &BulkIrReq_msg
#define BulkIrEndReq_fields &BulkIrEndReq_msg
#define BulkIrRes_fields &BulkIrRes_msg
#define ReqDisconnect_fields &ReqDisconnect_msg
#define ReqGuitarName_fields &ReqGuitarName_msg
#define ResGuitarName_fields &ResGuitarName_msg
#define ReqPlayPairingSound_fields &ReqPlayPairingSound_msg
#define ReqBootloadMode_fields &ReqBootloadMode_msg
#define ReqIsBootloadMode_fields &ReqIsBootloadMode_msg
#define ResIsBootloadMode_fields &ResIsBootloadMode_msg
#define ParamAmpClean_fields &ParamAmpClean_msg
#define BankDataWithKnobNumber_fields &BankDataWithKnobNumber_msg

/* Maximum encoded size of messages (where known) */
#define Ack_size                                 22
#define BankDataWithKnobNumber_size              3262
#define BankData_size                            3248
#define BatteryLevel_size                        13
#define BulkIrEndReq_size                        61
#define BulkIrReq_size                           61
#define BulkIrRes_size                           13
#define BulkIrStartReq_size                      126
#define CategoryData_size                        200
#define ChangeGuitarName_size                    65
#define ClearEffects_size                        2
#define DiagReq_size                             2
#define DiagRespErrCode_size                     11
#define DiagRespFirstParing_size                 11
#define DiagRespPOC_size                         11
#define InitFromApp_size                         78
#define InitFromGuitar_size                      230
#define InitKnobMatching1_size                   3251
#define InitKnobMatching2_size                   3251
#define InitKnobMatching3_size                   3251
#define KnobClicked_size                         11
#define KnobMatchingAll_size                     9795
#define KnobMatchingStart_size                   11
#define KnobMatching_size                        3262
#define Nack_size                                24
#define ParamAmpBgn_size                         57
#define ParamAmpClean_size                       57
#define ParamAmpFd_size                          57
#define ParamAmpMs_size                          57
#define ParamAmpMsbg_size                        57
#define ParamAmpVx_size                          57
#define ParamCabA_size                           2
#define ParamCabB_size                           2
#define ParamCabC_size                           2
#define ParamCabD_size                           2
#define ParamCabE_size                           2
#define ParamDelayDelay_size                     35
#define ParamEfxAcoustic_size                    46
#define ParamEfxAutowah_size                     13
#define ParamEfxDistortion_size                  35
#define ParamEfxRat_size                         35
#define ParamEfxSd10_size                        35
#define ParamEfxTs90_size                        35
#define ParamGate_size                           113
#define ParamModChorus_size                      24
#define ParamModPhaser_size                      24
#define ParamModTremolo_size                     24
#define ParamModVibrato_size                     24
#define ParamReverb_size                         35
#define ReqBootloadMode_size                     2
#define ReqDisconnect_size                       2
#define ReqGuitarName_size                       2
#define ReqInitFromGuitar_size                   2
#define ReqIsBootloadMode_size                   2
#define ReqPlayPairingSound_size                 2
#define ResGuitarName_size                       65
#define ResIsBootloadMode_size                   2
#define SingleParam_size                         44
#define TunerFrequency_size                      5
#define TunerOnOff_size                          2

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
